// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sha256_final (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ctx_data_address0,
        ctx_data_ce0,
        ctx_data_we0,
        ctx_data_d0,
        ctx_data_q0,
        ctx_data_address1,
        ctx_data_ce1,
        ctx_data_we1,
        ctx_data_d1,
        ctx_data_q1,
        ctx_datalen_read,
        ctx_bitlen_0_read,
        p_read3,
        p_read1,
        p_read2,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        hash_address0,
        hash_ce0,
        hash_we0,
        hash_d0,
        hash_address1,
        hash_ce1,
        hash_we1,
        hash_d1
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_state10 = 14'd512;
parameter    ap_ST_fsm_state11 = 14'd1024;
parameter    ap_ST_fsm_state12 = 14'd2048;
parameter    ap_ST_fsm_state13 = 14'd4096;
parameter    ap_ST_fsm_state14 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] ctx_data_address0;
output   ctx_data_ce0;
output   ctx_data_we0;
output  [7:0] ctx_data_d0;
input  [7:0] ctx_data_q0;
output  [5:0] ctx_data_address1;
output   ctx_data_ce1;
output   ctx_data_we1;
output  [7:0] ctx_data_d1;
input  [7:0] ctx_data_q1;
input  [31:0] ctx_datalen_read;
input  [31:0] ctx_bitlen_0_read;
input  [31:0] p_read3;
input  [31:0] p_read1;
input  [31:0] p_read2;
input  [31:0] p_read4;
input  [31:0] p_read5;
input  [31:0] p_read6;
input  [31:0] p_read7;
input  [31:0] p_read8;
input  [31:0] p_read9;
output  [5:0] hash_address0;
output   hash_ce0;
output   hash_we0;
output  [7:0] hash_d0;
output  [5:0] hash_address1;
output   hash_ce1;
output   hash_we1;
output  [7:0] hash_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] ctx_data_address0;
reg ctx_data_ce0;
reg ctx_data_we0;
reg[7:0] ctx_data_d0;
reg[5:0] ctx_data_address1;
reg ctx_data_ce1;
reg ctx_data_we1;
reg[7:0] ctx_data_d1;
reg[5:0] hash_address0;
reg hash_ce0;
reg hash_we0;
reg[7:0] hash_d0;
reg[5:0] hash_address1;
reg hash_ce1;
reg hash_we1;
reg[7:0] hash_d1;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_550;
wire    ap_CS_fsm_state3;
wire    grp_sha256_transform_fu_494_ap_done;
wire    ap_CS_fsm_state10;
reg   [31:0] reg_555;
reg   [31:0] reg_560;
reg   [31:0] reg_565;
reg   [31:0] reg_570;
reg   [31:0] reg_575;
reg   [31:0] reg_580;
reg   [31:0] reg_585;
wire   [0:0] tmp_fu_590_p2;
reg   [0:0] tmp_reg_1090;
wire   [31:0] i_1_fu_601_p2;
wire    ap_CS_fsm_state2;
wire   [5:0] i_5_fu_634_p2;
wire    ap_CS_fsm_state4;
reg   [7:0] tmp_78_reg_1110;
wire   [0:0] tmp_70_fu_628_p2;
reg   [7:0] tmp_79_reg_1115;
wire   [7:0] tmp_111_fu_770_p1;
reg   [7:0] tmp_111_reg_1120;
reg   [7:0] tmp_80_reg_1125;
reg   [7:0] tmp_82_reg_1130;
reg   [7:0] tmp_83_reg_1135;
wire   [31:0] i_fu_804_p2;
wire    ap_CS_fsm_state5;
wire   [4:0] i_3_cast1_fu_821_p1;
reg   [4:0] i_3_cast1_reg_1148;
wire    ap_CS_fsm_state11;
wire   [2:0] i_6_fu_831_p2;
reg   [2:0] i_6_reg_1156;
wire   [7:0] tmp_116_fu_865_p1;
reg   [7:0] tmp_116_reg_1161;
wire   [0:0] tmp_84_fu_825_p2;
wire   [2:0] tmp_91_fu_880_p2;
reg   [2:0] tmp_91_reg_1166;
wire   [3:0] tmp_95_fu_902_p3;
reg   [3:0] tmp_95_reg_1172;
wire   [7:0] tmp_119_fu_921_p1;
reg   [7:0] tmp_119_reg_1177;
wire   [7:0] tmp_120_fu_931_p1;
reg   [7:0] tmp_120_reg_1182;
wire   [7:0] tmp_121_fu_941_p1;
reg   [7:0] tmp_121_reg_1187;
wire   [7:0] tmp_122_fu_951_p1;
reg   [7:0] tmp_122_reg_1192;
wire   [7:0] tmp_123_fu_961_p1;
reg   [7:0] tmp_123_reg_1197;
wire    grp_sha256_transform_fu_494_ap_start;
wire    grp_sha256_transform_fu_494_ap_idle;
wire    grp_sha256_transform_fu_494_ap_ready;
reg   [31:0] grp_sha256_transform_fu_494_ctx_state_0_read;
reg   [31:0] grp_sha256_transform_fu_494_ctx_state_1_read;
reg   [31:0] grp_sha256_transform_fu_494_ctx_state_2_read;
reg   [31:0] grp_sha256_transform_fu_494_ctx_state_3_read;
reg   [31:0] grp_sha256_transform_fu_494_ctx_state_4_read;
reg   [31:0] grp_sha256_transform_fu_494_ctx_state_5_read;
reg   [31:0] grp_sha256_transform_fu_494_ctx_state_6_read;
reg   [31:0] grp_sha256_transform_fu_494_ctx_state_7_read;
wire   [5:0] grp_sha256_transform_fu_494_data_address0;
wire    grp_sha256_transform_fu_494_data_ce0;
wire   [5:0] grp_sha256_transform_fu_494_data_address1;
wire    grp_sha256_transform_fu_494_data_ce1;
wire   [31:0] grp_sha256_transform_fu_494_ap_return_0;
wire   [31:0] grp_sha256_transform_fu_494_ap_return_1;
wire   [31:0] grp_sha256_transform_fu_494_ap_return_2;
wire   [31:0] grp_sha256_transform_fu_494_ap_return_3;
wire   [31:0] grp_sha256_transform_fu_494_ap_return_4;
wire   [31:0] grp_sha256_transform_fu_494_ap_return_5;
wire   [31:0] grp_sha256_transform_fu_494_ap_return_6;
wire   [31:0] grp_sha256_transform_fu_494_ap_return_7;
reg   [31:0] i_1_in_reg_373;
wire   [0:0] icmp_fu_617_p2;
reg   [5:0] i_2_reg_382;
reg   [31:0] i_0_in_reg_393;
wire   [0:0] exitcond_fu_810_p2;
reg   [31:0] ctx_state_reg_402;
reg   [31:0] ctx_state_1_reg_412;
reg   [31:0] ctx_state_2_reg_422;
reg   [31:0] ctx_state_3_reg_432;
reg   [31:0] ctx_state_4_reg_442;
reg   [31:0] ctx_state_5_reg_452;
reg   [31:0] ctx_state_6_reg_462;
reg   [31:0] ctx_state_7_reg_472;
reg   [2:0] i_3_reg_482;
wire    ap_CS_fsm_state14;
reg    ap_reg_grp_sha256_transform_fu_494_ap_start;
wire    ap_CS_fsm_state9;
wire   [63:0] tmp_s_fu_596_p1;
wire   [63:0] tmp_69_fu_623_p1;
wire   [63:0] tmp_71_fu_640_p1;
wire   [63:0] tmp_68_fu_816_p1;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire   [63:0] tmp_93_fu_886_p1;
wire   [63:0] tmp_97_fu_910_p1;
wire   [63:0] tmp_88_fu_965_p1;
wire    ap_CS_fsm_state12;
wire   [63:0] tmp_99_fu_973_p1;
wire   [63:0] tmp_104_fu_986_p1;
wire    ap_CS_fsm_state13;
wire   [63:0] tmp_108_fu_996_p1;
wire   [63:0] tmp_110_fu_1004_p1;
wire   [63:0] tmp_113_fu_1012_p1;
wire   [7:0] tmp_76_fu_732_p2;
wire   [7:0] tmp_117_fu_875_p1;
wire   [7:0] tmp_118_fu_897_p1;
wire   [25:0] tmp_73_fu_607_p4;
wire   [31:0] tmp_81_fu_645_p2;
wire   [31:0] tmp_72_fu_650_p2;
wire   [0:0] tmp_74_fu_656_p2;
wire   [31:0] tmp_75_fu_661_p2;
wire   [4:0] tmp_92_fu_676_p1;
wire   [12:0] tmp_100_fu_690_p1;
wire   [20:0] tmp_107_fu_704_p1;
wire   [23:0] tmp_19_fu_707_p3;
wire   [23:0] tmp_103_fu_701_p1;
wire   [15:0] tmp_15_fu_693_p3;
wire   [15:0] tmp_96_fu_687_p1;
wire   [7:0] tmp_89_fu_673_p1;
wire   [7:0] tmp_17_fu_679_p3;
wire   [15:0] ctx_bitlen_cast_fu_726_p2;
wire   [23:0] ctx_bitlen_cast3_fu_720_p2;
wire   [31:0] ctx_bitlen_fu_715_p2;
wire   [31:0] tmp_102_read3_fu_666_p3;
wire   [1:0] tmp_114_fu_837_p1;
wire   [4:0] tmp_85_fu_841_p3;
wire   [4:0] tmp_86_fu_849_p2;
wire   [31:0] tmp_109_cast_fu_855_p1;
wire   [31:0] tmp_87_fu_859_p2;
wire   [31:0] tmp_90_fu_869_p2;
wire   [31:0] tmp_94_fu_891_p2;
wire   [31:0] tmp_98_fu_915_p2;
wire   [31:0] tmp_101_fu_925_p2;
wire   [31:0] tmp_105_fu_935_p2;
wire   [31:0] tmp_109_fu_945_p2;
wire   [31:0] tmp_112_fu_955_p2;
wire  signed [3:0] tmp_123_cast8_fu_970_p1;
wire   [4:0] tmp_102_fu_978_p3;
wire   [4:0] tmp_106_fu_991_p2;
wire  signed [4:0] tmp_135_cast7_fu_1001_p1;
wire  signed [4:0] tmp_139_cast6_fu_1009_p1;
reg   [13:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 ap_reg_grp_sha256_transform_fu_494_ap_start = 1'b0;
end

sha256_transform grp_sha256_transform_fu_494(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sha256_transform_fu_494_ap_start),
    .ap_done(grp_sha256_transform_fu_494_ap_done),
    .ap_idle(grp_sha256_transform_fu_494_ap_idle),
    .ap_ready(grp_sha256_transform_fu_494_ap_ready),
    .ctx_state_0_read(grp_sha256_transform_fu_494_ctx_state_0_read),
    .ctx_state_1_read(grp_sha256_transform_fu_494_ctx_state_1_read),
    .ctx_state_2_read(grp_sha256_transform_fu_494_ctx_state_2_read),
    .ctx_state_3_read(grp_sha256_transform_fu_494_ctx_state_3_read),
    .ctx_state_4_read(grp_sha256_transform_fu_494_ctx_state_4_read),
    .ctx_state_5_read(grp_sha256_transform_fu_494_ctx_state_5_read),
    .ctx_state_6_read(grp_sha256_transform_fu_494_ctx_state_6_read),
    .ctx_state_7_read(grp_sha256_transform_fu_494_ctx_state_7_read),
    .data_address0(grp_sha256_transform_fu_494_data_address0),
    .data_ce0(grp_sha256_transform_fu_494_data_ce0),
    .data_q0(ctx_data_q0),
    .data_address1(grp_sha256_transform_fu_494_data_address1),
    .data_ce1(grp_sha256_transform_fu_494_data_ce1),
    .data_q1(ctx_data_q1),
    .ap_return_0(grp_sha256_transform_fu_494_ap_return_0),
    .ap_return_1(grp_sha256_transform_fu_494_ap_return_1),
    .ap_return_2(grp_sha256_transform_fu_494_ap_return_2),
    .ap_return_3(grp_sha256_transform_fu_494_ap_return_3),
    .ap_return_4(grp_sha256_transform_fu_494_ap_return_4),
    .ap_return_5(grp_sha256_transform_fu_494_ap_return_5),
    .ap_return_6(grp_sha256_transform_fu_494_ap_return_6),
    .ap_return_7(grp_sha256_transform_fu_494_ap_return_7)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_sha256_transform_fu_494_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state2) & (icmp_fu_617_p2 == 1'd0)))) begin
            ap_reg_grp_sha256_transform_fu_494_ap_start <= 1'b1;
        end else if ((grp_sha256_transform_fu_494_ap_ready == 1'b1)) begin
            ap_reg_grp_sha256_transform_fu_494_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (exitcond_fu_810_p2 == 1'd1))) begin
        ctx_state_1_reg_412 <= p_read2;
    end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_70_fu_628_p2 == 1'd1) & (tmp_reg_1090 == 1'd0))) begin
        ctx_state_1_reg_412 <= reg_555;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (exitcond_fu_810_p2 == 1'd1))) begin
        ctx_state_2_reg_422 <= p_read4;
    end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_70_fu_628_p2 == 1'd1) & (tmp_reg_1090 == 1'd0))) begin
        ctx_state_2_reg_422 <= reg_560;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (exitcond_fu_810_p2 == 1'd1))) begin
        ctx_state_3_reg_432 <= p_read5;
    end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_70_fu_628_p2 == 1'd1) & (tmp_reg_1090 == 1'd0))) begin
        ctx_state_3_reg_432 <= reg_565;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (exitcond_fu_810_p2 == 1'd1))) begin
        ctx_state_4_reg_442 <= p_read6;
    end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_70_fu_628_p2 == 1'd1) & (tmp_reg_1090 == 1'd0))) begin
        ctx_state_4_reg_442 <= reg_570;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (exitcond_fu_810_p2 == 1'd1))) begin
        ctx_state_5_reg_452 <= p_read7;
    end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_70_fu_628_p2 == 1'd1) & (tmp_reg_1090 == 1'd0))) begin
        ctx_state_5_reg_452 <= reg_575;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (exitcond_fu_810_p2 == 1'd1))) begin
        ctx_state_6_reg_462 <= p_read8;
    end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_70_fu_628_p2 == 1'd1) & (tmp_reg_1090 == 1'd0))) begin
        ctx_state_6_reg_462 <= reg_580;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (exitcond_fu_810_p2 == 1'd1))) begin
        ctx_state_7_reg_472 <= p_read9;
    end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_70_fu_628_p2 == 1'd1) & (tmp_reg_1090 == 1'd0))) begin
        ctx_state_7_reg_472 <= reg_585;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (exitcond_fu_810_p2 == 1'd1))) begin
        ctx_state_reg_402 <= p_read1;
    end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_70_fu_628_p2 == 1'd1) & (tmp_reg_1090 == 1'd0))) begin
        ctx_state_reg_402 <= reg_550;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_fu_590_p2 == 1'd1))) begin
        i_0_in_reg_393 <= ctx_datalen_read;
    end else if (((1'b1 == ap_CS_fsm_state5) & (exitcond_fu_810_p2 == 1'd0))) begin
        i_0_in_reg_393 <= i_fu_804_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_fu_590_p2 == 1'd0))) begin
        i_1_in_reg_373 <= ctx_datalen_read;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_fu_617_p2 == 1'd1))) begin
        i_1_in_reg_373 <= i_1_fu_601_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_70_fu_628_p2 == 1'd0) & (tmp_reg_1090 == 1'd0))) begin
        i_2_reg_382 <= i_5_fu_634_p2;
    end else if (((grp_sha256_transform_fu_494_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_2_reg_382 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        i_3_reg_482 <= i_6_reg_1156;
    end else if (((grp_sha256_transform_fu_494_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        i_3_reg_482 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i_3_cast1_reg_1148[2 : 0] <= i_3_cast1_fu_821_p1[2 : 0];
        i_6_reg_1156 <= i_6_fu_831_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_sha256_transform_fu_494_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((grp_sha256_transform_fu_494_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        reg_550 <= grp_sha256_transform_fu_494_ap_return_0;
        reg_555 <= grp_sha256_transform_fu_494_ap_return_1;
        reg_560 <= grp_sha256_transform_fu_494_ap_return_2;
        reg_565 <= grp_sha256_transform_fu_494_ap_return_3;
        reg_570 <= grp_sha256_transform_fu_494_ap_return_4;
        reg_575 <= grp_sha256_transform_fu_494_ap_return_5;
        reg_580 <= grp_sha256_transform_fu_494_ap_return_6;
        reg_585 <= grp_sha256_transform_fu_494_ap_return_7;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & ((tmp_70_fu_628_p2 == 1'd1) | (tmp_reg_1090 == 1'd1)))) begin
        tmp_111_reg_1120 <= tmp_111_fu_770_p1;
        tmp_78_reg_1110 <= {{ctx_bitlen_cast3_fu_720_p2[23:16]}};
        tmp_79_reg_1115 <= {{ctx_bitlen_fu_715_p2[31:24]}};
        tmp_80_reg_1125 <= {{tmp_102_read3_fu_666_p3[15:8]}};
        tmp_82_reg_1130 <= {{tmp_102_read3_fu_666_p3[23:16]}};
        tmp_83_reg_1135 <= {{tmp_102_read3_fu_666_p3[31:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (tmp_84_fu_825_p2 == 1'd0))) begin
        tmp_116_reg_1161 <= tmp_116_fu_865_p1;
        tmp_119_reg_1177 <= tmp_119_fu_921_p1;
        tmp_120_reg_1182 <= tmp_120_fu_931_p1;
        tmp_121_reg_1187 <= tmp_121_fu_941_p1;
        tmp_122_reg_1192 <= tmp_122_fu_951_p1;
        tmp_123_reg_1197 <= tmp_123_fu_961_p1;
        tmp_91_reg_1166 <= tmp_91_fu_880_p2;
        tmp_95_reg_1172[2 : 0] <= tmp_95_fu_902_p3[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tmp_reg_1090 <= tmp_fu_590_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state11) & (tmp_84_fu_825_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (tmp_84_fu_825_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ctx_data_address0 = 64'd56;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ctx_data_address0 = 64'd58;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ctx_data_address0 = 64'd60;
    end else if (((1'b1 == ap_CS_fsm_state4) & ((tmp_70_fu_628_p2 == 1'd1) | (tmp_reg_1090 == 1'd1)))) begin
        ctx_data_address0 = 64'd63;
    end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_70_fu_628_p2 == 1'd0) & (tmp_reg_1090 == 1'd0))) begin
        ctx_data_address0 = tmp_71_fu_640_p1;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_fu_617_p2 == 1'd1))) begin
        ctx_data_address0 = tmp_69_fu_623_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        ctx_data_address0 = tmp_s_fu_596_p1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state3))) begin
        ctx_data_address0 = grp_sha256_transform_fu_494_data_address0;
    end else begin
        ctx_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ctx_data_address1 = 64'd57;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ctx_data_address1 = 64'd59;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ctx_data_address1 = 64'd61;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        ctx_data_address1 = tmp_68_fu_816_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        ctx_data_address1 = 64'd62;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state3))) begin
        ctx_data_address1 = grp_sha256_transform_fu_494_data_address1;
    end else begin
        ctx_data_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & ((tmp_70_fu_628_p2 == 1'd1) | (tmp_reg_1090 == 1'd1))) | ((1'b1 == ap_CS_fsm_state4) & (tmp_70_fu_628_p2 == 1'd0) & (tmp_reg_1090 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_fu_617_p2 == 1'd1)))) begin
        ctx_data_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state3))) begin
        ctx_data_ce0 = grp_sha256_transform_fu_494_data_ce0;
    end else begin
        ctx_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        ctx_data_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state3))) begin
        ctx_data_ce1 = grp_sha256_transform_fu_494_data_ce1;
    end else begin
        ctx_data_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ctx_data_d0 = tmp_83_reg_1135;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ctx_data_d0 = tmp_80_reg_1125;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ctx_data_d0 = tmp_79_reg_1115;
    end else if (((1'b1 == ap_CS_fsm_state4) & ((tmp_70_fu_628_p2 == 1'd1) | (tmp_reg_1090 == 1'd1)))) begin
        ctx_data_d0 = tmp_76_fu_732_p2;
    end else if ((((1'b1 == ap_CS_fsm_state4) & (tmp_70_fu_628_p2 == 1'd0) & (tmp_reg_1090 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_fu_617_p2 == 1'd1)))) begin
        ctx_data_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        ctx_data_d0 = 8'd128;
    end else begin
        ctx_data_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ctx_data_d1 = tmp_82_reg_1130;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        ctx_data_d1 = tmp_111_reg_1120;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ctx_data_d1 = tmp_78_reg_1110;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        ctx_data_d1 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        ctx_data_d1 = {{ctx_bitlen_cast_fu_726_p2[15:8]}};
    end else begin
        ctx_data_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & ((tmp_70_fu_628_p2 == 1'd1) | (tmp_reg_1090 == 1'd1))) | ((1'b1 == ap_CS_fsm_state4) & (tmp_70_fu_628_p2 == 1'd0) & (tmp_reg_1090 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_fu_617_p2 == 1'd1)))) begin
        ctx_data_we0 = 1'b1;
    end else begin
        ctx_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state5) & (exitcond_fu_810_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & ((tmp_70_fu_628_p2 == 1'd1) | (tmp_reg_1090 == 1'd1))))) begin
        ctx_data_we1 = 1'b1;
    end else begin
        ctx_data_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_sha256_transform_fu_494_ctx_state_0_read = ctx_state_reg_402;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_sha256_transform_fu_494_ctx_state_0_read = p_read1;
    end else begin
        grp_sha256_transform_fu_494_ctx_state_0_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_sha256_transform_fu_494_ctx_state_1_read = ctx_state_1_reg_412;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_sha256_transform_fu_494_ctx_state_1_read = p_read2;
    end else begin
        grp_sha256_transform_fu_494_ctx_state_1_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_sha256_transform_fu_494_ctx_state_2_read = ctx_state_2_reg_422;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_sha256_transform_fu_494_ctx_state_2_read = p_read4;
    end else begin
        grp_sha256_transform_fu_494_ctx_state_2_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_sha256_transform_fu_494_ctx_state_3_read = ctx_state_3_reg_432;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_sha256_transform_fu_494_ctx_state_3_read = p_read5;
    end else begin
        grp_sha256_transform_fu_494_ctx_state_3_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_sha256_transform_fu_494_ctx_state_4_read = ctx_state_4_reg_442;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_sha256_transform_fu_494_ctx_state_4_read = p_read6;
    end else begin
        grp_sha256_transform_fu_494_ctx_state_4_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_sha256_transform_fu_494_ctx_state_5_read = ctx_state_5_reg_452;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_sha256_transform_fu_494_ctx_state_5_read = p_read7;
    end else begin
        grp_sha256_transform_fu_494_ctx_state_5_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_sha256_transform_fu_494_ctx_state_6_read = ctx_state_6_reg_462;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_sha256_transform_fu_494_ctx_state_6_read = p_read8;
    end else begin
        grp_sha256_transform_fu_494_ctx_state_6_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_sha256_transform_fu_494_ctx_state_7_read = ctx_state_7_reg_472;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_sha256_transform_fu_494_ctx_state_7_read = p_read9;
    end else begin
        grp_sha256_transform_fu_494_ctx_state_7_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        hash_address0 = tmp_110_fu_1004_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        hash_address0 = tmp_104_fu_986_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        hash_address0 = tmp_88_fu_965_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        hash_address0 = tmp_93_fu_886_p1;
    end else begin
        hash_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        hash_address1 = tmp_113_fu_1012_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        hash_address1 = tmp_108_fu_996_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        hash_address1 = tmp_99_fu_973_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        hash_address1 = tmp_97_fu_910_p1;
    end else begin
        hash_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11))) begin
        hash_ce0 = 1'b1;
    end else begin
        hash_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11))) begin
        hash_ce1 = 1'b1;
    end else begin
        hash_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        hash_d0 = tmp_122_reg_1192;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        hash_d0 = tmp_120_reg_1182;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        hash_d0 = tmp_116_reg_1161;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        hash_d0 = tmp_117_fu_875_p1;
    end else begin
        hash_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        hash_d1 = tmp_123_reg_1197;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        hash_d1 = tmp_121_reg_1187;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        hash_d1 = tmp_119_reg_1177;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        hash_d1 = tmp_118_fu_897_p1;
    end else begin
        hash_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state11) & (tmp_84_fu_825_p2 == 1'd0)))) begin
        hash_we0 = 1'b1;
    end else begin
        hash_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state11) & (tmp_84_fu_825_p2 == 1'd0)))) begin
        hash_we1 = 1'b1;
    end else begin
        hash_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_fu_590_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_fu_590_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_fu_617_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((grp_sha256_transform_fu_494_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & ((tmp_70_fu_628_p2 == 1'd1) | (tmp_reg_1090 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (exitcond_fu_810_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_sha256_transform_fu_494_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (tmp_84_fu_825_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ctx_bitlen_cast3_fu_720_p2 = (tmp_19_fu_707_p3 + tmp_103_fu_701_p1);

assign ctx_bitlen_cast_fu_726_p2 = (tmp_15_fu_693_p3 + tmp_96_fu_687_p1);

assign ctx_bitlen_fu_715_p2 = (ctx_bitlen_0_read + tmp_81_fu_645_p2);

assign exitcond_fu_810_p2 = ((i_0_in_reg_393 == 32'd55) ? 1'b1 : 1'b0);

assign grp_sha256_transform_fu_494_ap_start = ap_reg_grp_sha256_transform_fu_494_ap_start;

assign i_1_fu_601_p2 = (i_1_in_reg_373 + 32'd1);

assign i_3_cast1_fu_821_p1 = i_3_reg_482;

assign i_5_fu_634_p2 = (i_2_reg_382 + 6'd1);

assign i_6_fu_831_p2 = (i_3_reg_482 + 3'd1);

assign i_fu_804_p2 = (i_0_in_reg_393 + 32'd1);

assign icmp_fu_617_p2 = ((tmp_73_fu_607_p4 == 26'd0) ? 1'b1 : 1'b0);

assign tmp_100_fu_690_p1 = ctx_datalen_read[12:0];

assign tmp_101_fu_925_p2 = reg_570 >> tmp_109_cast_fu_855_p1;

assign tmp_102_fu_978_p3 = {{2'd2}, {i_3_reg_482}};

assign tmp_102_read3_fu_666_p3 = ((tmp_74_fu_656_p2[0:0] === 1'b1) ? tmp_75_fu_661_p2 : p_read3);

assign tmp_103_fu_701_p1 = ctx_bitlen_0_read[23:0];

assign tmp_104_fu_986_p1 = tmp_102_fu_978_p3;

assign tmp_105_fu_935_p2 = reg_575 >> tmp_109_cast_fu_855_p1;

assign tmp_106_fu_991_p2 = ($signed(5'd20) + $signed(i_3_cast1_reg_1148));

assign tmp_107_fu_704_p1 = ctx_datalen_read[20:0];

assign tmp_108_fu_996_p1 = tmp_106_fu_991_p2;

assign tmp_109_cast_fu_855_p1 = tmp_86_fu_849_p2;

assign tmp_109_fu_945_p2 = reg_580 >> tmp_109_cast_fu_855_p1;

assign tmp_110_fu_1004_p1 = $unsigned(tmp_135_cast7_fu_1001_p1);

assign tmp_111_fu_770_p1 = tmp_102_read3_fu_666_p3[7:0];

assign tmp_112_fu_955_p2 = reg_585 >> tmp_109_cast_fu_855_p1;

assign tmp_113_fu_1012_p1 = $unsigned(tmp_139_cast6_fu_1009_p1);

assign tmp_114_fu_837_p1 = i_3_reg_482[1:0];

assign tmp_116_fu_865_p1 = tmp_87_fu_859_p2[7:0];

assign tmp_117_fu_875_p1 = tmp_90_fu_869_p2[7:0];

assign tmp_118_fu_897_p1 = tmp_94_fu_891_p2[7:0];

assign tmp_119_fu_921_p1 = tmp_98_fu_915_p2[7:0];

assign tmp_120_fu_931_p1 = tmp_101_fu_925_p2[7:0];

assign tmp_121_fu_941_p1 = tmp_105_fu_935_p2[7:0];

assign tmp_122_fu_951_p1 = tmp_109_fu_945_p2[7:0];

assign tmp_123_cast8_fu_970_p1 = $signed(tmp_91_reg_1166);

assign tmp_123_fu_961_p1 = tmp_112_fu_955_p2[7:0];

assign tmp_135_cast7_fu_1001_p1 = $signed(tmp_95_reg_1172);

assign tmp_139_cast6_fu_1009_p1 = $signed(tmp_91_reg_1166);

assign tmp_15_fu_693_p3 = {{tmp_100_fu_690_p1}, {3'd0}};

assign tmp_17_fu_679_p3 = {{tmp_92_fu_676_p1}, {3'd0}};

assign tmp_19_fu_707_p3 = {{tmp_107_fu_704_p1}, {3'd0}};

assign tmp_68_fu_816_p1 = i_fu_804_p2;

assign tmp_69_fu_623_p1 = i_1_fu_601_p2;

assign tmp_70_fu_628_p2 = ((i_2_reg_382 == 6'd56) ? 1'b1 : 1'b0);

assign tmp_71_fu_640_p1 = i_2_reg_382;

assign tmp_72_fu_650_p2 = (tmp_81_fu_645_p2 ^ 32'd4294967295);

assign tmp_73_fu_607_p4 = {{i_1_fu_601_p2[31:6]}};

assign tmp_74_fu_656_p2 = ((ctx_bitlen_0_read > tmp_72_fu_650_p2) ? 1'b1 : 1'b0);

assign tmp_75_fu_661_p2 = (32'd1 + p_read3);

assign tmp_76_fu_732_p2 = (tmp_89_fu_673_p1 + tmp_17_fu_679_p3);

assign tmp_81_fu_645_p2 = ctx_datalen_read << 32'd3;

assign tmp_84_fu_825_p2 = ((i_3_reg_482 == 3'd4) ? 1'b1 : 1'b0);

assign tmp_85_fu_841_p3 = {{tmp_114_fu_837_p1}, {3'd0}};

assign tmp_86_fu_849_p2 = ($signed(5'd24) - $signed(tmp_85_fu_841_p3));

assign tmp_87_fu_859_p2 = reg_550 >> tmp_109_cast_fu_855_p1;

assign tmp_88_fu_965_p1 = i_3_reg_482;

assign tmp_89_fu_673_p1 = ctx_bitlen_0_read[7:0];

assign tmp_90_fu_869_p2 = reg_555 >> tmp_109_cast_fu_855_p1;

assign tmp_91_fu_880_p2 = (i_3_reg_482 ^ 3'd4);

assign tmp_92_fu_676_p1 = ctx_datalen_read[4:0];

assign tmp_93_fu_886_p1 = tmp_91_fu_880_p2;

assign tmp_94_fu_891_p2 = reg_560 >> tmp_109_cast_fu_855_p1;

assign tmp_95_fu_902_p3 = {{1'd1}, {i_3_reg_482}};

assign tmp_96_fu_687_p1 = ctx_bitlen_0_read[15:0];

assign tmp_97_fu_910_p1 = tmp_95_fu_902_p3;

assign tmp_98_fu_915_p2 = reg_565 >> tmp_109_cast_fu_855_p1;

assign tmp_99_fu_973_p1 = $unsigned(tmp_123_cast8_fu_970_p1);

assign tmp_fu_590_p2 = ((ctx_datalen_read < 32'd56) ? 1'b1 : 1'b0);

assign tmp_s_fu_596_p1 = ctx_datalen_read;

always @ (posedge ap_clk) begin
    i_3_cast1_reg_1148[4:3] <= 2'b00;
    tmp_95_reg_1172[3] <= 1'b1;
end

endmodule //sha256_final
