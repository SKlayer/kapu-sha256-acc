// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "sha256_final.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sha256_final::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic sha256_final::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<14> sha256_final::ap_ST_fsm_state1 = "1";
const sc_lv<14> sha256_final::ap_ST_fsm_state2 = "10";
const sc_lv<14> sha256_final::ap_ST_fsm_state3 = "100";
const sc_lv<14> sha256_final::ap_ST_fsm_state4 = "1000";
const sc_lv<14> sha256_final::ap_ST_fsm_state5 = "10000";
const sc_lv<14> sha256_final::ap_ST_fsm_state6 = "100000";
const sc_lv<14> sha256_final::ap_ST_fsm_state7 = "1000000";
const sc_lv<14> sha256_final::ap_ST_fsm_state8 = "10000000";
const sc_lv<14> sha256_final::ap_ST_fsm_state9 = "100000000";
const sc_lv<14> sha256_final::ap_ST_fsm_state10 = "1000000000";
const sc_lv<14> sha256_final::ap_ST_fsm_state11 = "10000000000";
const sc_lv<14> sha256_final::ap_ST_fsm_state12 = "100000000000";
const sc_lv<14> sha256_final::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<14> sha256_final::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<32> sha256_final::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> sha256_final::ap_const_lv32_2 = "10";
const sc_lv<32> sha256_final::ap_const_lv32_9 = "1001";
const sc_lv<32> sha256_final::ap_const_lv32_1 = "1";
const sc_lv<32> sha256_final::ap_const_lv32_3 = "11";
const sc_lv<1> sha256_final::ap_const_lv1_0 = "0";
const sc_lv<1> sha256_final::ap_const_lv1_1 = "1";
const sc_lv<32> sha256_final::ap_const_lv32_4 = "100";
const sc_lv<32> sha256_final::ap_const_lv32_A = "1010";
const sc_lv<6> sha256_final::ap_const_lv6_0 = "000000";
const sc_lv<3> sha256_final::ap_const_lv3_0 = "000";
const sc_lv<32> sha256_final::ap_const_lv32_D = "1101";
const sc_lv<32> sha256_final::ap_const_lv32_8 = "1000";
const sc_lv<64> sha256_final::ap_const_lv64_3F = "111111";
const sc_lv<64> sha256_final::ap_const_lv64_3E = "111110";
const sc_lv<64> sha256_final::ap_const_lv64_3D = "111101";
const sc_lv<32> sha256_final::ap_const_lv32_5 = "101";
const sc_lv<64> sha256_final::ap_const_lv64_3C = "111100";
const sc_lv<64> sha256_final::ap_const_lv64_3B = "111011";
const sc_lv<32> sha256_final::ap_const_lv32_6 = "110";
const sc_lv<64> sha256_final::ap_const_lv64_3A = "111010";
const sc_lv<64> sha256_final::ap_const_lv64_39 = "111001";
const sc_lv<32> sha256_final::ap_const_lv32_7 = "111";
const sc_lv<64> sha256_final::ap_const_lv64_38 = "111000";
const sc_lv<32> sha256_final::ap_const_lv32_B = "1011";
const sc_lv<32> sha256_final::ap_const_lv32_C = "1100";
const sc_lv<8> sha256_final::ap_const_lv8_80 = "10000000";
const sc_lv<8> sha256_final::ap_const_lv8_0 = "00000000";
const sc_lv<32> sha256_final::ap_const_lv32_38 = "111000";
const sc_lv<32> sha256_final::ap_const_lv32_1F = "11111";
const sc_lv<26> sha256_final::ap_const_lv26_0 = "00000000000000000000000000";
const sc_lv<6> sha256_final::ap_const_lv6_38 = "111000";
const sc_lv<6> sha256_final::ap_const_lv6_1 = "1";
const sc_lv<32> sha256_final::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<32> sha256_final::ap_const_lv32_F = "1111";
const sc_lv<32> sha256_final::ap_const_lv32_10 = "10000";
const sc_lv<32> sha256_final::ap_const_lv32_17 = "10111";
const sc_lv<32> sha256_final::ap_const_lv32_18 = "11000";
const sc_lv<32> sha256_final::ap_const_lv32_37 = "110111";
const sc_lv<3> sha256_final::ap_const_lv3_4 = "100";
const sc_lv<3> sha256_final::ap_const_lv3_1 = "1";
const sc_lv<5> sha256_final::ap_const_lv5_18 = "11000";
const sc_lv<2> sha256_final::ap_const_lv2_2 = "10";
const sc_lv<5> sha256_final::ap_const_lv5_14 = "10100";
const bool sha256_final::ap_const_boolean_1 = true;

sha256_final::sha256_final(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_sha256_transform_fu_494 = new sha256_transform("grp_sha256_transform_fu_494");
    grp_sha256_transform_fu_494->ap_clk(ap_clk);
    grp_sha256_transform_fu_494->ap_rst(ap_rst);
    grp_sha256_transform_fu_494->ap_start(grp_sha256_transform_fu_494_ap_start);
    grp_sha256_transform_fu_494->ap_done(grp_sha256_transform_fu_494_ap_done);
    grp_sha256_transform_fu_494->ap_idle(grp_sha256_transform_fu_494_ap_idle);
    grp_sha256_transform_fu_494->ap_ready(grp_sha256_transform_fu_494_ap_ready);
    grp_sha256_transform_fu_494->ctx_state_0_read(grp_sha256_transform_fu_494_ctx_state_0_read);
    grp_sha256_transform_fu_494->ctx_state_1_read(grp_sha256_transform_fu_494_ctx_state_1_read);
    grp_sha256_transform_fu_494->ctx_state_2_read(grp_sha256_transform_fu_494_ctx_state_2_read);
    grp_sha256_transform_fu_494->ctx_state_3_read(grp_sha256_transform_fu_494_ctx_state_3_read);
    grp_sha256_transform_fu_494->ctx_state_4_read(grp_sha256_transform_fu_494_ctx_state_4_read);
    grp_sha256_transform_fu_494->ctx_state_5_read(grp_sha256_transform_fu_494_ctx_state_5_read);
    grp_sha256_transform_fu_494->ctx_state_6_read(grp_sha256_transform_fu_494_ctx_state_6_read);
    grp_sha256_transform_fu_494->ctx_state_7_read(grp_sha256_transform_fu_494_ctx_state_7_read);
    grp_sha256_transform_fu_494->data_address0(grp_sha256_transform_fu_494_data_address0);
    grp_sha256_transform_fu_494->data_ce0(grp_sha256_transform_fu_494_data_ce0);
    grp_sha256_transform_fu_494->data_q0(ctx_data_q0);
    grp_sha256_transform_fu_494->data_address1(grp_sha256_transform_fu_494_data_address1);
    grp_sha256_transform_fu_494->data_ce1(grp_sha256_transform_fu_494_data_ce1);
    grp_sha256_transform_fu_494->data_q1(ctx_data_q1);
    grp_sha256_transform_fu_494->ap_return_0(grp_sha256_transform_fu_494_ap_return_0);
    grp_sha256_transform_fu_494->ap_return_1(grp_sha256_transform_fu_494_ap_return_1);
    grp_sha256_transform_fu_494->ap_return_2(grp_sha256_transform_fu_494_ap_return_2);
    grp_sha256_transform_fu_494->ap_return_3(grp_sha256_transform_fu_494_ap_return_3);
    grp_sha256_transform_fu_494->ap_return_4(grp_sha256_transform_fu_494_ap_return_4);
    grp_sha256_transform_fu_494->ap_return_5(grp_sha256_transform_fu_494_ap_return_5);
    grp_sha256_transform_fu_494->ap_return_6(grp_sha256_transform_fu_494_ap_return_6);
    grp_sha256_transform_fu_494->ap_return_7(grp_sha256_transform_fu_494_ap_return_7);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_84_fu_825_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_84_fu_825_p2 );

    SC_METHOD(thread_ctx_bitlen_cast3_fu_720_p2);
    sensitive << ( tmp_19_fu_707_p3 );
    sensitive << ( tmp_103_fu_701_p1 );

    SC_METHOD(thread_ctx_bitlen_cast_fu_726_p2);
    sensitive << ( tmp_15_fu_693_p3 );
    sensitive << ( tmp_96_fu_687_p1 );

    SC_METHOD(thread_ctx_bitlen_fu_715_p2);
    sensitive << ( ctx_bitlen_0_read );
    sensitive << ( tmp_81_fu_645_p2 );

    SC_METHOD(thread_ctx_data_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_reg_1090 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_70_fu_628_p2 );
    sensitive << ( grp_sha256_transform_fu_494_data_address0 );
    sensitive << ( icmp_fu_617_p2 );
    sensitive << ( tmp_s_fu_596_p1 );
    sensitive << ( tmp_69_fu_623_p1 );
    sensitive << ( tmp_71_fu_640_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ctx_data_address1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_sha256_transform_fu_494_data_address1 );
    sensitive << ( tmp_68_fu_816_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ctx_data_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_reg_1090 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_70_fu_628_p2 );
    sensitive << ( grp_sha256_transform_fu_494_data_ce0 );
    sensitive << ( icmp_fu_617_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ctx_data_ce1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_sha256_transform_fu_494_data_ce1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ctx_data_d0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_reg_1090 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_70_fu_628_p2 );
    sensitive << ( tmp_79_reg_1115 );
    sensitive << ( tmp_80_reg_1125 );
    sensitive << ( tmp_83_reg_1135 );
    sensitive << ( icmp_fu_617_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_76_fu_732_p2 );

    SC_METHOD(thread_ctx_data_d1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_78_reg_1110 );
    sensitive << ( tmp_111_reg_1120 );
    sensitive << ( tmp_82_reg_1130 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ctx_bitlen_cast_fu_726_p2 );

    SC_METHOD(thread_ctx_data_we0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_reg_1090 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_70_fu_628_p2 );
    sensitive << ( icmp_fu_617_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ctx_data_we1);
    sensitive << ( tmp_reg_1090 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_70_fu_628_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond_fu_810_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_exitcond_fu_810_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i_0_in_reg_393 );

    SC_METHOD(thread_grp_sha256_transform_fu_494_ap_start);
    sensitive << ( ap_reg_grp_sha256_transform_fu_494_ap_start );

    SC_METHOD(thread_grp_sha256_transform_fu_494_ctx_state_0_read);
    sensitive << ( p_read1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ctx_state_reg_402 );

    SC_METHOD(thread_grp_sha256_transform_fu_494_ctx_state_1_read);
    sensitive << ( p_read2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ctx_state_1_reg_412 );

    SC_METHOD(thread_grp_sha256_transform_fu_494_ctx_state_2_read);
    sensitive << ( p_read4 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ctx_state_2_reg_422 );

    SC_METHOD(thread_grp_sha256_transform_fu_494_ctx_state_3_read);
    sensitive << ( p_read5 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ctx_state_3_reg_432 );

    SC_METHOD(thread_grp_sha256_transform_fu_494_ctx_state_4_read);
    sensitive << ( p_read6 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ctx_state_4_reg_442 );

    SC_METHOD(thread_grp_sha256_transform_fu_494_ctx_state_5_read);
    sensitive << ( p_read7 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ctx_state_5_reg_452 );

    SC_METHOD(thread_grp_sha256_transform_fu_494_ctx_state_6_read);
    sensitive << ( p_read8 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ctx_state_6_reg_462 );

    SC_METHOD(thread_grp_sha256_transform_fu_494_ctx_state_7_read);
    sensitive << ( p_read9 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ctx_state_7_reg_472 );

    SC_METHOD(thread_hash_address0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_93_fu_886_p1 );
    sensitive << ( tmp_88_fu_965_p1 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_104_fu_986_p1 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_110_fu_1004_p1 );

    SC_METHOD(thread_hash_address1);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_97_fu_910_p1 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_99_fu_973_p1 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_108_fu_996_p1 );
    sensitive << ( tmp_113_fu_1012_p1 );

    SC_METHOD(thread_hash_ce0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_hash_ce1);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_hash_d0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_116_reg_1161 );
    sensitive << ( tmp_120_reg_1182 );
    sensitive << ( tmp_122_reg_1192 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_117_fu_875_p1 );

    SC_METHOD(thread_hash_d1);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_119_reg_1177 );
    sensitive << ( tmp_121_reg_1187 );
    sensitive << ( tmp_123_reg_1197 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_118_fu_897_p1 );

    SC_METHOD(thread_hash_we0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_84_fu_825_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_hash_we1);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_84_fu_825_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_i_1_fu_601_p2);
    sensitive << ( i_1_in_reg_373 );

    SC_METHOD(thread_i_3_cast1_fu_821_p1);
    sensitive << ( i_3_reg_482 );

    SC_METHOD(thread_i_5_fu_634_p2);
    sensitive << ( i_2_reg_382 );

    SC_METHOD(thread_i_6_fu_831_p2);
    sensitive << ( i_3_reg_482 );

    SC_METHOD(thread_i_fu_804_p2);
    sensitive << ( i_0_in_reg_393 );

    SC_METHOD(thread_icmp_fu_617_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_73_fu_607_p4 );

    SC_METHOD(thread_tmp_100_fu_690_p1);
    sensitive << ( ctx_datalen_read );

    SC_METHOD(thread_tmp_101_fu_925_p2);
    sensitive << ( reg_570 );
    sensitive << ( tmp_109_cast_fu_855_p1 );

    SC_METHOD(thread_tmp_102_fu_978_p3);
    sensitive << ( i_3_reg_482 );

    SC_METHOD(thread_tmp_102_read3_fu_666_p3);
    sensitive << ( p_read3 );
    sensitive << ( tmp_74_fu_656_p2 );
    sensitive << ( tmp_75_fu_661_p2 );

    SC_METHOD(thread_tmp_103_fu_701_p1);
    sensitive << ( ctx_bitlen_0_read );

    SC_METHOD(thread_tmp_104_fu_986_p1);
    sensitive << ( tmp_102_fu_978_p3 );

    SC_METHOD(thread_tmp_105_fu_935_p2);
    sensitive << ( reg_575 );
    sensitive << ( tmp_109_cast_fu_855_p1 );

    SC_METHOD(thread_tmp_106_fu_991_p2);
    sensitive << ( i_3_cast1_reg_1148 );

    SC_METHOD(thread_tmp_107_fu_704_p1);
    sensitive << ( ctx_datalen_read );

    SC_METHOD(thread_tmp_108_fu_996_p1);
    sensitive << ( tmp_106_fu_991_p2 );

    SC_METHOD(thread_tmp_109_cast_fu_855_p1);
    sensitive << ( tmp_86_fu_849_p2 );

    SC_METHOD(thread_tmp_109_fu_945_p2);
    sensitive << ( reg_580 );
    sensitive << ( tmp_109_cast_fu_855_p1 );

    SC_METHOD(thread_tmp_110_fu_1004_p1);
    sensitive << ( tmp_135_cast7_fu_1001_p1 );

    SC_METHOD(thread_tmp_111_fu_770_p1);
    sensitive << ( tmp_102_read3_fu_666_p3 );

    SC_METHOD(thread_tmp_112_fu_955_p2);
    sensitive << ( reg_585 );
    sensitive << ( tmp_109_cast_fu_855_p1 );

    SC_METHOD(thread_tmp_113_fu_1012_p1);
    sensitive << ( tmp_139_cast6_fu_1009_p1 );

    SC_METHOD(thread_tmp_114_fu_837_p1);
    sensitive << ( i_3_reg_482 );

    SC_METHOD(thread_tmp_116_fu_865_p1);
    sensitive << ( tmp_87_fu_859_p2 );

    SC_METHOD(thread_tmp_117_fu_875_p1);
    sensitive << ( tmp_90_fu_869_p2 );

    SC_METHOD(thread_tmp_118_fu_897_p1);
    sensitive << ( tmp_94_fu_891_p2 );

    SC_METHOD(thread_tmp_119_fu_921_p1);
    sensitive << ( tmp_98_fu_915_p2 );

    SC_METHOD(thread_tmp_120_fu_931_p1);
    sensitive << ( tmp_101_fu_925_p2 );

    SC_METHOD(thread_tmp_121_fu_941_p1);
    sensitive << ( tmp_105_fu_935_p2 );

    SC_METHOD(thread_tmp_122_fu_951_p1);
    sensitive << ( tmp_109_fu_945_p2 );

    SC_METHOD(thread_tmp_123_cast8_fu_970_p1);
    sensitive << ( tmp_91_reg_1166 );

    SC_METHOD(thread_tmp_123_fu_961_p1);
    sensitive << ( tmp_112_fu_955_p2 );

    SC_METHOD(thread_tmp_135_cast7_fu_1001_p1);
    sensitive << ( tmp_95_reg_1172 );

    SC_METHOD(thread_tmp_139_cast6_fu_1009_p1);
    sensitive << ( tmp_91_reg_1166 );

    SC_METHOD(thread_tmp_15_fu_693_p3);
    sensitive << ( tmp_100_fu_690_p1 );

    SC_METHOD(thread_tmp_17_fu_679_p3);
    sensitive << ( tmp_92_fu_676_p1 );

    SC_METHOD(thread_tmp_19_fu_707_p3);
    sensitive << ( tmp_107_fu_704_p1 );

    SC_METHOD(thread_tmp_68_fu_816_p1);
    sensitive << ( i_fu_804_p2 );

    SC_METHOD(thread_tmp_69_fu_623_p1);
    sensitive << ( i_1_fu_601_p2 );

    SC_METHOD(thread_tmp_70_fu_628_p2);
    sensitive << ( tmp_reg_1090 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_2_reg_382 );

    SC_METHOD(thread_tmp_71_fu_640_p1);
    sensitive << ( i_2_reg_382 );

    SC_METHOD(thread_tmp_72_fu_650_p2);
    sensitive << ( tmp_81_fu_645_p2 );

    SC_METHOD(thread_tmp_73_fu_607_p4);
    sensitive << ( i_1_fu_601_p2 );

    SC_METHOD(thread_tmp_74_fu_656_p2);
    sensitive << ( ctx_bitlen_0_read );
    sensitive << ( tmp_reg_1090 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_70_fu_628_p2 );
    sensitive << ( tmp_72_fu_650_p2 );

    SC_METHOD(thread_tmp_75_fu_661_p2);
    sensitive << ( p_read3 );

    SC_METHOD(thread_tmp_76_fu_732_p2);
    sensitive << ( tmp_89_fu_673_p1 );
    sensitive << ( tmp_17_fu_679_p3 );

    SC_METHOD(thread_tmp_81_fu_645_p2);
    sensitive << ( ctx_datalen_read );

    SC_METHOD(thread_tmp_84_fu_825_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( i_3_reg_482 );

    SC_METHOD(thread_tmp_85_fu_841_p3);
    sensitive << ( tmp_114_fu_837_p1 );

    SC_METHOD(thread_tmp_86_fu_849_p2);
    sensitive << ( tmp_85_fu_841_p3 );

    SC_METHOD(thread_tmp_87_fu_859_p2);
    sensitive << ( reg_550 );
    sensitive << ( tmp_109_cast_fu_855_p1 );

    SC_METHOD(thread_tmp_88_fu_965_p1);
    sensitive << ( i_3_reg_482 );

    SC_METHOD(thread_tmp_89_fu_673_p1);
    sensitive << ( ctx_bitlen_0_read );

    SC_METHOD(thread_tmp_90_fu_869_p2);
    sensitive << ( reg_555 );
    sensitive << ( tmp_109_cast_fu_855_p1 );

    SC_METHOD(thread_tmp_91_fu_880_p2);
    sensitive << ( i_3_reg_482 );

    SC_METHOD(thread_tmp_92_fu_676_p1);
    sensitive << ( ctx_datalen_read );

    SC_METHOD(thread_tmp_93_fu_886_p1);
    sensitive << ( tmp_91_fu_880_p2 );

    SC_METHOD(thread_tmp_94_fu_891_p2);
    sensitive << ( reg_560 );
    sensitive << ( tmp_109_cast_fu_855_p1 );

    SC_METHOD(thread_tmp_95_fu_902_p3);
    sensitive << ( i_3_reg_482 );

    SC_METHOD(thread_tmp_96_fu_687_p1);
    sensitive << ( ctx_bitlen_0_read );

    SC_METHOD(thread_tmp_97_fu_910_p1);
    sensitive << ( tmp_95_fu_902_p3 );

    SC_METHOD(thread_tmp_98_fu_915_p2);
    sensitive << ( reg_565 );
    sensitive << ( tmp_109_cast_fu_855_p1 );

    SC_METHOD(thread_tmp_99_fu_973_p1);
    sensitive << ( tmp_123_cast8_fu_970_p1 );

    SC_METHOD(thread_tmp_fu_590_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ctx_datalen_read );

    SC_METHOD(thread_tmp_s_fu_596_p1);
    sensitive << ( ctx_datalen_read );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_sha256_transform_fu_494_ap_done );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_fu_590_p2 );
    sensitive << ( tmp_reg_1090 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_70_fu_628_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_84_fu_825_p2 );
    sensitive << ( icmp_fu_617_p2 );
    sensitive << ( exitcond_fu_810_p2 );

    ap_CS_fsm = "00000000000001";
    ap_reg_grp_sha256_transform_fu_494_ap_start = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sha256_final_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ctx_data_address0, "(port)ctx_data_address0");
    sc_trace(mVcdFile, ctx_data_ce0, "(port)ctx_data_ce0");
    sc_trace(mVcdFile, ctx_data_we0, "(port)ctx_data_we0");
    sc_trace(mVcdFile, ctx_data_d0, "(port)ctx_data_d0");
    sc_trace(mVcdFile, ctx_data_q0, "(port)ctx_data_q0");
    sc_trace(mVcdFile, ctx_data_address1, "(port)ctx_data_address1");
    sc_trace(mVcdFile, ctx_data_ce1, "(port)ctx_data_ce1");
    sc_trace(mVcdFile, ctx_data_we1, "(port)ctx_data_we1");
    sc_trace(mVcdFile, ctx_data_d1, "(port)ctx_data_d1");
    sc_trace(mVcdFile, ctx_data_q1, "(port)ctx_data_q1");
    sc_trace(mVcdFile, ctx_datalen_read, "(port)ctx_datalen_read");
    sc_trace(mVcdFile, ctx_bitlen_0_read, "(port)ctx_bitlen_0_read");
    sc_trace(mVcdFile, p_read3, "(port)p_read3");
    sc_trace(mVcdFile, p_read1, "(port)p_read1");
    sc_trace(mVcdFile, p_read2, "(port)p_read2");
    sc_trace(mVcdFile, p_read4, "(port)p_read4");
    sc_trace(mVcdFile, p_read5, "(port)p_read5");
    sc_trace(mVcdFile, p_read6, "(port)p_read6");
    sc_trace(mVcdFile, p_read7, "(port)p_read7");
    sc_trace(mVcdFile, p_read8, "(port)p_read8");
    sc_trace(mVcdFile, p_read9, "(port)p_read9");
    sc_trace(mVcdFile, hash_address0, "(port)hash_address0");
    sc_trace(mVcdFile, hash_ce0, "(port)hash_ce0");
    sc_trace(mVcdFile, hash_we0, "(port)hash_we0");
    sc_trace(mVcdFile, hash_d0, "(port)hash_d0");
    sc_trace(mVcdFile, hash_address1, "(port)hash_address1");
    sc_trace(mVcdFile, hash_ce1, "(port)hash_ce1");
    sc_trace(mVcdFile, hash_we1, "(port)hash_we1");
    sc_trace(mVcdFile, hash_d1, "(port)hash_d1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_550, "reg_550");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, grp_sha256_transform_fu_494_ap_done, "grp_sha256_transform_fu_494_ap_done");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, reg_555, "reg_555");
    sc_trace(mVcdFile, reg_560, "reg_560");
    sc_trace(mVcdFile, reg_565, "reg_565");
    sc_trace(mVcdFile, reg_570, "reg_570");
    sc_trace(mVcdFile, reg_575, "reg_575");
    sc_trace(mVcdFile, reg_580, "reg_580");
    sc_trace(mVcdFile, reg_585, "reg_585");
    sc_trace(mVcdFile, tmp_fu_590_p2, "tmp_fu_590_p2");
    sc_trace(mVcdFile, tmp_reg_1090, "tmp_reg_1090");
    sc_trace(mVcdFile, i_1_fu_601_p2, "i_1_fu_601_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_5_fu_634_p2, "i_5_fu_634_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_78_reg_1110, "tmp_78_reg_1110");
    sc_trace(mVcdFile, tmp_70_fu_628_p2, "tmp_70_fu_628_p2");
    sc_trace(mVcdFile, tmp_79_reg_1115, "tmp_79_reg_1115");
    sc_trace(mVcdFile, tmp_111_fu_770_p1, "tmp_111_fu_770_p1");
    sc_trace(mVcdFile, tmp_111_reg_1120, "tmp_111_reg_1120");
    sc_trace(mVcdFile, tmp_80_reg_1125, "tmp_80_reg_1125");
    sc_trace(mVcdFile, tmp_82_reg_1130, "tmp_82_reg_1130");
    sc_trace(mVcdFile, tmp_83_reg_1135, "tmp_83_reg_1135");
    sc_trace(mVcdFile, i_fu_804_p2, "i_fu_804_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, i_3_cast1_fu_821_p1, "i_3_cast1_fu_821_p1");
    sc_trace(mVcdFile, i_3_cast1_reg_1148, "i_3_cast1_reg_1148");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, i_6_fu_831_p2, "i_6_fu_831_p2");
    sc_trace(mVcdFile, i_6_reg_1156, "i_6_reg_1156");
    sc_trace(mVcdFile, tmp_116_fu_865_p1, "tmp_116_fu_865_p1");
    sc_trace(mVcdFile, tmp_116_reg_1161, "tmp_116_reg_1161");
    sc_trace(mVcdFile, tmp_84_fu_825_p2, "tmp_84_fu_825_p2");
    sc_trace(mVcdFile, tmp_91_fu_880_p2, "tmp_91_fu_880_p2");
    sc_trace(mVcdFile, tmp_91_reg_1166, "tmp_91_reg_1166");
    sc_trace(mVcdFile, tmp_95_fu_902_p3, "tmp_95_fu_902_p3");
    sc_trace(mVcdFile, tmp_95_reg_1172, "tmp_95_reg_1172");
    sc_trace(mVcdFile, tmp_119_fu_921_p1, "tmp_119_fu_921_p1");
    sc_trace(mVcdFile, tmp_119_reg_1177, "tmp_119_reg_1177");
    sc_trace(mVcdFile, tmp_120_fu_931_p1, "tmp_120_fu_931_p1");
    sc_trace(mVcdFile, tmp_120_reg_1182, "tmp_120_reg_1182");
    sc_trace(mVcdFile, tmp_121_fu_941_p1, "tmp_121_fu_941_p1");
    sc_trace(mVcdFile, tmp_121_reg_1187, "tmp_121_reg_1187");
    sc_trace(mVcdFile, tmp_122_fu_951_p1, "tmp_122_fu_951_p1");
    sc_trace(mVcdFile, tmp_122_reg_1192, "tmp_122_reg_1192");
    sc_trace(mVcdFile, tmp_123_fu_961_p1, "tmp_123_fu_961_p1");
    sc_trace(mVcdFile, tmp_123_reg_1197, "tmp_123_reg_1197");
    sc_trace(mVcdFile, grp_sha256_transform_fu_494_ap_start, "grp_sha256_transform_fu_494_ap_start");
    sc_trace(mVcdFile, grp_sha256_transform_fu_494_ap_idle, "grp_sha256_transform_fu_494_ap_idle");
    sc_trace(mVcdFile, grp_sha256_transform_fu_494_ap_ready, "grp_sha256_transform_fu_494_ap_ready");
    sc_trace(mVcdFile, grp_sha256_transform_fu_494_ctx_state_0_read, "grp_sha256_transform_fu_494_ctx_state_0_read");
    sc_trace(mVcdFile, grp_sha256_transform_fu_494_ctx_state_1_read, "grp_sha256_transform_fu_494_ctx_state_1_read");
    sc_trace(mVcdFile, grp_sha256_transform_fu_494_ctx_state_2_read, "grp_sha256_transform_fu_494_ctx_state_2_read");
    sc_trace(mVcdFile, grp_sha256_transform_fu_494_ctx_state_3_read, "grp_sha256_transform_fu_494_ctx_state_3_read");
    sc_trace(mVcdFile, grp_sha256_transform_fu_494_ctx_state_4_read, "grp_sha256_transform_fu_494_ctx_state_4_read");
    sc_trace(mVcdFile, grp_sha256_transform_fu_494_ctx_state_5_read, "grp_sha256_transform_fu_494_ctx_state_5_read");
    sc_trace(mVcdFile, grp_sha256_transform_fu_494_ctx_state_6_read, "grp_sha256_transform_fu_494_ctx_state_6_read");
    sc_trace(mVcdFile, grp_sha256_transform_fu_494_ctx_state_7_read, "grp_sha256_transform_fu_494_ctx_state_7_read");
    sc_trace(mVcdFile, grp_sha256_transform_fu_494_data_address0, "grp_sha256_transform_fu_494_data_address0");
    sc_trace(mVcdFile, grp_sha256_transform_fu_494_data_ce0, "grp_sha256_transform_fu_494_data_ce0");
    sc_trace(mVcdFile, grp_sha256_transform_fu_494_data_address1, "grp_sha256_transform_fu_494_data_address1");
    sc_trace(mVcdFile, grp_sha256_transform_fu_494_data_ce1, "grp_sha256_transform_fu_494_data_ce1");
    sc_trace(mVcdFile, grp_sha256_transform_fu_494_ap_return_0, "grp_sha256_transform_fu_494_ap_return_0");
    sc_trace(mVcdFile, grp_sha256_transform_fu_494_ap_return_1, "grp_sha256_transform_fu_494_ap_return_1");
    sc_trace(mVcdFile, grp_sha256_transform_fu_494_ap_return_2, "grp_sha256_transform_fu_494_ap_return_2");
    sc_trace(mVcdFile, grp_sha256_transform_fu_494_ap_return_3, "grp_sha256_transform_fu_494_ap_return_3");
    sc_trace(mVcdFile, grp_sha256_transform_fu_494_ap_return_4, "grp_sha256_transform_fu_494_ap_return_4");
    sc_trace(mVcdFile, grp_sha256_transform_fu_494_ap_return_5, "grp_sha256_transform_fu_494_ap_return_5");
    sc_trace(mVcdFile, grp_sha256_transform_fu_494_ap_return_6, "grp_sha256_transform_fu_494_ap_return_6");
    sc_trace(mVcdFile, grp_sha256_transform_fu_494_ap_return_7, "grp_sha256_transform_fu_494_ap_return_7");
    sc_trace(mVcdFile, i_1_in_reg_373, "i_1_in_reg_373");
    sc_trace(mVcdFile, icmp_fu_617_p2, "icmp_fu_617_p2");
    sc_trace(mVcdFile, i_2_reg_382, "i_2_reg_382");
    sc_trace(mVcdFile, i_0_in_reg_393, "i_0_in_reg_393");
    sc_trace(mVcdFile, exitcond_fu_810_p2, "exitcond_fu_810_p2");
    sc_trace(mVcdFile, ctx_state_reg_402, "ctx_state_reg_402");
    sc_trace(mVcdFile, ctx_state_1_reg_412, "ctx_state_1_reg_412");
    sc_trace(mVcdFile, ctx_state_2_reg_422, "ctx_state_2_reg_422");
    sc_trace(mVcdFile, ctx_state_3_reg_432, "ctx_state_3_reg_432");
    sc_trace(mVcdFile, ctx_state_4_reg_442, "ctx_state_4_reg_442");
    sc_trace(mVcdFile, ctx_state_5_reg_452, "ctx_state_5_reg_452");
    sc_trace(mVcdFile, ctx_state_6_reg_462, "ctx_state_6_reg_462");
    sc_trace(mVcdFile, ctx_state_7_reg_472, "ctx_state_7_reg_472");
    sc_trace(mVcdFile, i_3_reg_482, "i_3_reg_482");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_reg_grp_sha256_transform_fu_494_ap_start, "ap_reg_grp_sha256_transform_fu_494_ap_start");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_s_fu_596_p1, "tmp_s_fu_596_p1");
    sc_trace(mVcdFile, tmp_69_fu_623_p1, "tmp_69_fu_623_p1");
    sc_trace(mVcdFile, tmp_71_fu_640_p1, "tmp_71_fu_640_p1");
    sc_trace(mVcdFile, tmp_68_fu_816_p1, "tmp_68_fu_816_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_93_fu_886_p1, "tmp_93_fu_886_p1");
    sc_trace(mVcdFile, tmp_97_fu_910_p1, "tmp_97_fu_910_p1");
    sc_trace(mVcdFile, tmp_88_fu_965_p1, "tmp_88_fu_965_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, tmp_99_fu_973_p1, "tmp_99_fu_973_p1");
    sc_trace(mVcdFile, tmp_104_fu_986_p1, "tmp_104_fu_986_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, tmp_108_fu_996_p1, "tmp_108_fu_996_p1");
    sc_trace(mVcdFile, tmp_110_fu_1004_p1, "tmp_110_fu_1004_p1");
    sc_trace(mVcdFile, tmp_113_fu_1012_p1, "tmp_113_fu_1012_p1");
    sc_trace(mVcdFile, tmp_76_fu_732_p2, "tmp_76_fu_732_p2");
    sc_trace(mVcdFile, tmp_117_fu_875_p1, "tmp_117_fu_875_p1");
    sc_trace(mVcdFile, tmp_118_fu_897_p1, "tmp_118_fu_897_p1");
    sc_trace(mVcdFile, tmp_73_fu_607_p4, "tmp_73_fu_607_p4");
    sc_trace(mVcdFile, tmp_81_fu_645_p2, "tmp_81_fu_645_p2");
    sc_trace(mVcdFile, tmp_72_fu_650_p2, "tmp_72_fu_650_p2");
    sc_trace(mVcdFile, tmp_74_fu_656_p2, "tmp_74_fu_656_p2");
    sc_trace(mVcdFile, tmp_75_fu_661_p2, "tmp_75_fu_661_p2");
    sc_trace(mVcdFile, tmp_92_fu_676_p1, "tmp_92_fu_676_p1");
    sc_trace(mVcdFile, tmp_100_fu_690_p1, "tmp_100_fu_690_p1");
    sc_trace(mVcdFile, tmp_107_fu_704_p1, "tmp_107_fu_704_p1");
    sc_trace(mVcdFile, tmp_19_fu_707_p3, "tmp_19_fu_707_p3");
    sc_trace(mVcdFile, tmp_103_fu_701_p1, "tmp_103_fu_701_p1");
    sc_trace(mVcdFile, tmp_15_fu_693_p3, "tmp_15_fu_693_p3");
    sc_trace(mVcdFile, tmp_96_fu_687_p1, "tmp_96_fu_687_p1");
    sc_trace(mVcdFile, tmp_89_fu_673_p1, "tmp_89_fu_673_p1");
    sc_trace(mVcdFile, tmp_17_fu_679_p3, "tmp_17_fu_679_p3");
    sc_trace(mVcdFile, ctx_bitlen_cast_fu_726_p2, "ctx_bitlen_cast_fu_726_p2");
    sc_trace(mVcdFile, ctx_bitlen_cast3_fu_720_p2, "ctx_bitlen_cast3_fu_720_p2");
    sc_trace(mVcdFile, ctx_bitlen_fu_715_p2, "ctx_bitlen_fu_715_p2");
    sc_trace(mVcdFile, tmp_102_read3_fu_666_p3, "tmp_102_read3_fu_666_p3");
    sc_trace(mVcdFile, tmp_114_fu_837_p1, "tmp_114_fu_837_p1");
    sc_trace(mVcdFile, tmp_85_fu_841_p3, "tmp_85_fu_841_p3");
    sc_trace(mVcdFile, tmp_86_fu_849_p2, "tmp_86_fu_849_p2");
    sc_trace(mVcdFile, tmp_109_cast_fu_855_p1, "tmp_109_cast_fu_855_p1");
    sc_trace(mVcdFile, tmp_87_fu_859_p2, "tmp_87_fu_859_p2");
    sc_trace(mVcdFile, tmp_90_fu_869_p2, "tmp_90_fu_869_p2");
    sc_trace(mVcdFile, tmp_94_fu_891_p2, "tmp_94_fu_891_p2");
    sc_trace(mVcdFile, tmp_98_fu_915_p2, "tmp_98_fu_915_p2");
    sc_trace(mVcdFile, tmp_101_fu_925_p2, "tmp_101_fu_925_p2");
    sc_trace(mVcdFile, tmp_105_fu_935_p2, "tmp_105_fu_935_p2");
    sc_trace(mVcdFile, tmp_109_fu_945_p2, "tmp_109_fu_945_p2");
    sc_trace(mVcdFile, tmp_112_fu_955_p2, "tmp_112_fu_955_p2");
    sc_trace(mVcdFile, tmp_123_cast8_fu_970_p1, "tmp_123_cast8_fu_970_p1");
    sc_trace(mVcdFile, tmp_102_fu_978_p3, "tmp_102_fu_978_p3");
    sc_trace(mVcdFile, tmp_106_fu_991_p2, "tmp_106_fu_991_p2");
    sc_trace(mVcdFile, tmp_135_cast7_fu_1001_p1, "tmp_135_cast7_fu_1001_p1");
    sc_trace(mVcdFile, tmp_139_cast6_fu_1009_p1, "tmp_139_cast6_fu_1009_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

sha256_final::~sha256_final() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_sha256_transform_fu_494;
}

void sha256_final::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_sha256_transform_fu_494_ap_start = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, icmp_fu_617_p2.read())) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
            ap_reg_grp_sha256_transform_fu_494_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_sha256_transform_fu_494_ap_ready.read())) {
            ap_reg_grp_sha256_transform_fu_494_ap_start = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_810_p2.read()))) {
        ctx_state_1_reg_412 = p_read2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(tmp_reg_1090.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_70_fu_628_p2.read()))) {
        ctx_state_1_reg_412 = reg_555.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_810_p2.read()))) {
        ctx_state_2_reg_422 = p_read4.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(tmp_reg_1090.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_70_fu_628_p2.read()))) {
        ctx_state_2_reg_422 = reg_560.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_810_p2.read()))) {
        ctx_state_3_reg_432 = p_read5.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(tmp_reg_1090.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_70_fu_628_p2.read()))) {
        ctx_state_3_reg_432 = reg_565.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_810_p2.read()))) {
        ctx_state_4_reg_442 = p_read6.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(tmp_reg_1090.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_70_fu_628_p2.read()))) {
        ctx_state_4_reg_442 = reg_570.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_810_p2.read()))) {
        ctx_state_5_reg_452 = p_read7.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(tmp_reg_1090.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_70_fu_628_p2.read()))) {
        ctx_state_5_reg_452 = reg_575.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_810_p2.read()))) {
        ctx_state_6_reg_462 = p_read8.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(tmp_reg_1090.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_70_fu_628_p2.read()))) {
        ctx_state_6_reg_462 = reg_580.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_810_p2.read()))) {
        ctx_state_7_reg_472 = p_read9.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(tmp_reg_1090.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_70_fu_628_p2.read()))) {
        ctx_state_7_reg_472 = reg_585.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_810_p2.read()))) {
        ctx_state_reg_402 = p_read1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(tmp_reg_1090.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_70_fu_628_p2.read()))) {
        ctx_state_reg_402 = reg_550.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(tmp_fu_590_p2.read(), ap_const_lv1_1))) {
        i_0_in_reg_393 = ctx_datalen_read.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_810_p2.read()))) {
        i_0_in_reg_393 = i_fu_804_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(tmp_fu_590_p2.read(), ap_const_lv1_0))) {
        i_1_in_reg_373 = ctx_datalen_read.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_fu_617_p2.read()))) {
        i_1_in_reg_373 = i_1_fu_601_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(tmp_reg_1090.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_70_fu_628_p2.read()))) {
        i_2_reg_382 = i_5_fu_634_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(grp_sha256_transform_fu_494_ap_done.read(), ap_const_logic_1))) {
        i_2_reg_382 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        i_3_reg_482 = i_6_reg_1156.read();
    } else if ((esl_seteq<1,1,1>(grp_sha256_transform_fu_494_ap_done.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        i_3_reg_482 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i_3_cast1_reg_1148 = i_3_cast1_fu_821_p1.read();
        i_6_reg_1156 = i_6_fu_831_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
  esl_seteq<1,1,1>(grp_sha256_transform_fu_494_ap_done.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(grp_sha256_transform_fu_494_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())))) {
        reg_550 = grp_sha256_transform_fu_494_ap_return_0.read();
        reg_555 = grp_sha256_transform_fu_494_ap_return_1.read();
        reg_560 = grp_sha256_transform_fu_494_ap_return_2.read();
        reg_565 = grp_sha256_transform_fu_494_ap_return_3.read();
        reg_570 = grp_sha256_transform_fu_494_ap_return_4.read();
        reg_575 = grp_sha256_transform_fu_494_ap_return_5.read();
        reg_580 = grp_sha256_transform_fu_494_ap_return_6.read();
        reg_585 = grp_sha256_transform_fu_494_ap_return_7.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && (esl_seteq<1,1,1>(tmp_reg_1090.read(), ap_const_lv1_1) || 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_70_fu_628_p2.read())))) {
        tmp_111_reg_1120 = tmp_111_fu_770_p1.read();
        tmp_78_reg_1110 = ctx_bitlen_cast3_fu_720_p2.read().range(23, 16);
        tmp_79_reg_1115 = ctx_bitlen_fu_715_p2.read().range(31, 24);
        tmp_80_reg_1125 = tmp_102_read3_fu_666_p3.read().range(15, 8);
        tmp_82_reg_1130 = tmp_102_read3_fu_666_p3.read().range(23, 16);
        tmp_83_reg_1135 = tmp_102_read3_fu_666_p3.read().range(31, 24);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_84_fu_825_p2.read()))) {
        tmp_116_reg_1161 = tmp_116_fu_865_p1.read();
        tmp_119_reg_1177 = tmp_119_fu_921_p1.read();
        tmp_120_reg_1182 = tmp_120_fu_931_p1.read();
        tmp_121_reg_1187 = tmp_121_fu_941_p1.read();
        tmp_122_reg_1192 = tmp_122_fu_951_p1.read();
        tmp_123_reg_1197 = tmp_123_fu_961_p1.read();
        tmp_91_reg_1166 = tmp_91_fu_880_p2.read();
        tmp_95_reg_1172 = tmp_95_fu_902_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        tmp_reg_1090 = tmp_fu_590_p2.read();
    }
}

void sha256_final::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void sha256_final::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void sha256_final::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void sha256_final::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void sha256_final::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void sha256_final::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void sha256_final::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void sha256_final::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void sha256_final::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void sha256_final::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void sha256_final::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void sha256_final::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void sha256_final::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void sha256_final::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void sha256_final::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_84_fu_825_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void sha256_final::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void sha256_final::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_84_fu_825_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_bitlen_cast3_fu_720_p2() {
    ctx_bitlen_cast3_fu_720_p2 = (!tmp_19_fu_707_p3.read().is_01() || !tmp_103_fu_701_p1.read().is_01())? sc_lv<24>(): (sc_biguint<24>(tmp_19_fu_707_p3.read()) + sc_biguint<24>(tmp_103_fu_701_p1.read()));
}

void sha256_final::thread_ctx_bitlen_cast_fu_726_p2() {
    ctx_bitlen_cast_fu_726_p2 = (!tmp_15_fu_693_p3.read().is_01() || !tmp_96_fu_687_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp_15_fu_693_p3.read()) + sc_biguint<16>(tmp_96_fu_687_p1.read()));
}

void sha256_final::thread_ctx_bitlen_fu_715_p2() {
    ctx_bitlen_fu_715_p2 = (!ctx_bitlen_0_read.read().is_01() || !tmp_81_fu_645_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ctx_bitlen_0_read.read()) + sc_biguint<32>(tmp_81_fu_645_p2.read()));
}

void sha256_final::thread_ctx_data_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        ctx_data_address0 =  (sc_lv<6>) (ap_const_lv64_38);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ctx_data_address0 =  (sc_lv<6>) (ap_const_lv64_3A);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ctx_data_address0 =  (sc_lv<6>) (ap_const_lv64_3C);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                (esl_seteq<1,1,1>(tmp_reg_1090.read(), ap_const_lv1_1) || 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_70_fu_628_p2.read())))) {
        ctx_data_address0 =  (sc_lv<6>) (ap_const_lv64_3F);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(tmp_reg_1090.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_70_fu_628_p2.read()))) {
        ctx_data_address0 =  (sc_lv<6>) (tmp_71_fu_640_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_fu_617_p2.read()))) {
        ctx_data_address0 =  (sc_lv<6>) (tmp_69_fu_623_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        ctx_data_address0 =  (sc_lv<6>) (tmp_s_fu_596_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        ctx_data_address0 = grp_sha256_transform_fu_494_data_address0.read();
    } else {
        ctx_data_address0 = "XXXXXX";
    }
}

void sha256_final::thread_ctx_data_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        ctx_data_address1 =  (sc_lv<6>) (ap_const_lv64_39);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ctx_data_address1 =  (sc_lv<6>) (ap_const_lv64_3B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ctx_data_address1 =  (sc_lv<6>) (ap_const_lv64_3D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ctx_data_address1 =  (sc_lv<6>) (tmp_68_fu_816_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ctx_data_address1 =  (sc_lv<6>) (ap_const_lv64_3E);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        ctx_data_address1 = grp_sha256_transform_fu_494_data_address1.read();
    } else {
        ctx_data_address1 = "XXXXXX";
    }
}

void sha256_final::thread_ctx_data_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          (esl_seteq<1,1,1>(tmp_reg_1090.read(), ap_const_lv1_1) || 
           esl_seteq<1,1,1>(ap_const_lv1_1, tmp_70_fu_628_p2.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_fu_617_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(tmp_reg_1090.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_70_fu_628_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        ctx_data_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        ctx_data_ce0 = grp_sha256_transform_fu_494_data_ce0.read();
    } else {
        ctx_data_ce0 = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_data_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        ctx_data_ce1 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        ctx_data_ce1 = grp_sha256_transform_fu_494_data_ce1.read();
    } else {
        ctx_data_ce1 = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_data_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        ctx_data_d0 = tmp_83_reg_1135.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ctx_data_d0 = tmp_80_reg_1125.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ctx_data_d0 = tmp_79_reg_1115.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                (esl_seteq<1,1,1>(tmp_reg_1090.read(), ap_const_lv1_1) || 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_70_fu_628_p2.read())))) {
        ctx_data_d0 = tmp_76_fu_732_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_fu_617_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                 esl_seteq<1,1,1>(tmp_reg_1090.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_70_fu_628_p2.read())))) {
        ctx_data_d0 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        ctx_data_d0 = ap_const_lv8_80;
    } else {
        ctx_data_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void sha256_final::thread_ctx_data_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        ctx_data_d1 = tmp_82_reg_1130.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ctx_data_d1 = tmp_111_reg_1120.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ctx_data_d1 = tmp_78_reg_1110.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ctx_data_d1 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ctx_data_d1 = ctx_bitlen_cast_fu_726_p2.read().range(15, 8);
    } else {
        ctx_data_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void sha256_final::thread_ctx_data_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          (esl_seteq<1,1,1>(tmp_reg_1090.read(), ap_const_lv1_1) || 
           esl_seteq<1,1,1>(ap_const_lv1_1, tmp_70_fu_628_p2.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_fu_617_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(tmp_reg_1090.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_70_fu_628_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        ctx_data_we0 = ap_const_logic_1;
    } else {
        ctx_data_we0 = ap_const_logic_0;
    }
}

void sha256_final::thread_ctx_data_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          (esl_seteq<1,1,1>(tmp_reg_1090.read(), ap_const_lv1_1) || 
           esl_seteq<1,1,1>(ap_const_lv1_1, tmp_70_fu_628_p2.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_810_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        ctx_data_we1 = ap_const_logic_1;
    } else {
        ctx_data_we1 = ap_const_logic_0;
    }
}

void sha256_final::thread_exitcond_fu_810_p2() {
    exitcond_fu_810_p2 = (!i_0_in_reg_393.read().is_01() || !ap_const_lv32_37.is_01())? sc_lv<1>(): sc_lv<1>(i_0_in_reg_393.read() == ap_const_lv32_37);
}

void sha256_final::thread_grp_sha256_transform_fu_494_ap_start() {
    grp_sha256_transform_fu_494_ap_start = ap_reg_grp_sha256_transform_fu_494_ap_start.read();
}

void sha256_final::thread_grp_sha256_transform_fu_494_ctx_state_0_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_sha256_transform_fu_494_ctx_state_0_read = ctx_state_reg_402.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_sha256_transform_fu_494_ctx_state_0_read = p_read1.read();
    } else {
        grp_sha256_transform_fu_494_ctx_state_0_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_final::thread_grp_sha256_transform_fu_494_ctx_state_1_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_sha256_transform_fu_494_ctx_state_1_read = ctx_state_1_reg_412.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_sha256_transform_fu_494_ctx_state_1_read = p_read2.read();
    } else {
        grp_sha256_transform_fu_494_ctx_state_1_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_final::thread_grp_sha256_transform_fu_494_ctx_state_2_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_sha256_transform_fu_494_ctx_state_2_read = ctx_state_2_reg_422.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_sha256_transform_fu_494_ctx_state_2_read = p_read4.read();
    } else {
        grp_sha256_transform_fu_494_ctx_state_2_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_final::thread_grp_sha256_transform_fu_494_ctx_state_3_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_sha256_transform_fu_494_ctx_state_3_read = ctx_state_3_reg_432.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_sha256_transform_fu_494_ctx_state_3_read = p_read5.read();
    } else {
        grp_sha256_transform_fu_494_ctx_state_3_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_final::thread_grp_sha256_transform_fu_494_ctx_state_4_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_sha256_transform_fu_494_ctx_state_4_read = ctx_state_4_reg_442.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_sha256_transform_fu_494_ctx_state_4_read = p_read6.read();
    } else {
        grp_sha256_transform_fu_494_ctx_state_4_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_final::thread_grp_sha256_transform_fu_494_ctx_state_5_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_sha256_transform_fu_494_ctx_state_5_read = ctx_state_5_reg_452.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_sha256_transform_fu_494_ctx_state_5_read = p_read7.read();
    } else {
        grp_sha256_transform_fu_494_ctx_state_5_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_final::thread_grp_sha256_transform_fu_494_ctx_state_6_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_sha256_transform_fu_494_ctx_state_6_read = ctx_state_6_reg_462.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_sha256_transform_fu_494_ctx_state_6_read = p_read8.read();
    } else {
        grp_sha256_transform_fu_494_ctx_state_6_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_final::thread_grp_sha256_transform_fu_494_ctx_state_7_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_sha256_transform_fu_494_ctx_state_7_read = ctx_state_7_reg_472.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_sha256_transform_fu_494_ctx_state_7_read = p_read9.read();
    } else {
        grp_sha256_transform_fu_494_ctx_state_7_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sha256_final::thread_hash_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        hash_address0 =  (sc_lv<6>) (tmp_110_fu_1004_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        hash_address0 =  (sc_lv<6>) (tmp_104_fu_986_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        hash_address0 =  (sc_lv<6>) (tmp_88_fu_965_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        hash_address0 =  (sc_lv<6>) (tmp_93_fu_886_p1.read());
    } else {
        hash_address0 = "XXXXXX";
    }
}

void sha256_final::thread_hash_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        hash_address1 =  (sc_lv<6>) (tmp_113_fu_1012_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        hash_address1 =  (sc_lv<6>) (tmp_108_fu_996_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        hash_address1 =  (sc_lv<6>) (tmp_99_fu_973_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        hash_address1 =  (sc_lv<6>) (tmp_97_fu_910_p1.read());
    } else {
        hash_address1 = "XXXXXX";
    }
}

void sha256_final::thread_hash_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        hash_ce0 = ap_const_logic_1;
    } else {
        hash_ce0 = ap_const_logic_0;
    }
}

void sha256_final::thread_hash_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        hash_ce1 = ap_const_logic_1;
    } else {
        hash_ce1 = ap_const_logic_0;
    }
}

void sha256_final::thread_hash_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        hash_d0 = tmp_122_reg_1192.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        hash_d0 = tmp_120_reg_1182.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        hash_d0 = tmp_116_reg_1161.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        hash_d0 = tmp_117_fu_875_p1.read();
    } else {
        hash_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void sha256_final::thread_hash_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        hash_d1 = tmp_123_reg_1197.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        hash_d1 = tmp_121_reg_1187.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        hash_d1 = tmp_119_reg_1177.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        hash_d1 = tmp_118_fu_897_p1.read();
    } else {
        hash_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void sha256_final::thread_hash_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_84_fu_825_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        hash_we0 = ap_const_logic_1;
    } else {
        hash_we0 = ap_const_logic_0;
    }
}

void sha256_final::thread_hash_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_84_fu_825_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        hash_we1 = ap_const_logic_1;
    } else {
        hash_we1 = ap_const_logic_0;
    }
}

void sha256_final::thread_i_1_fu_601_p2() {
    i_1_fu_601_p2 = (!i_1_in_reg_373.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_1_in_reg_373.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void sha256_final::thread_i_3_cast1_fu_821_p1() {
    i_3_cast1_fu_821_p1 = esl_zext<5,3>(i_3_reg_482.read());
}

void sha256_final::thread_i_5_fu_634_p2() {
    i_5_fu_634_p2 = (!i_2_reg_382.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_2_reg_382.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void sha256_final::thread_i_6_fu_831_p2() {
    i_6_fu_831_p2 = (!i_3_reg_482.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_3_reg_482.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void sha256_final::thread_i_fu_804_p2() {
    i_fu_804_p2 = (!i_0_in_reg_393.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_0_in_reg_393.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void sha256_final::thread_icmp_fu_617_p2() {
    icmp_fu_617_p2 = (!tmp_73_fu_607_p4.read().is_01() || !ap_const_lv26_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_73_fu_607_p4.read() == ap_const_lv26_0);
}

void sha256_final::thread_tmp_100_fu_690_p1() {
    tmp_100_fu_690_p1 = ctx_datalen_read.read().range(13-1, 0);
}

void sha256_final::thread_tmp_101_fu_925_p2() {
    tmp_101_fu_925_p2 = (!tmp_109_cast_fu_855_p1.read().is_01())? sc_lv<32>(): reg_570.read() >> (unsigned short)tmp_109_cast_fu_855_p1.read().to_uint();
}

void sha256_final::thread_tmp_102_fu_978_p3() {
    tmp_102_fu_978_p3 = esl_concat<2,3>(ap_const_lv2_2, i_3_reg_482.read());
}

void sha256_final::thread_tmp_102_read3_fu_666_p3() {
    tmp_102_read3_fu_666_p3 = (!tmp_74_fu_656_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_74_fu_656_p2.read()[0].to_bool())? tmp_75_fu_661_p2.read(): p_read3.read());
}

void sha256_final::thread_tmp_103_fu_701_p1() {
    tmp_103_fu_701_p1 = ctx_bitlen_0_read.read().range(24-1, 0);
}

void sha256_final::thread_tmp_104_fu_986_p1() {
    tmp_104_fu_986_p1 = esl_zext<64,5>(tmp_102_fu_978_p3.read());
}

void sha256_final::thread_tmp_105_fu_935_p2() {
    tmp_105_fu_935_p2 = (!tmp_109_cast_fu_855_p1.read().is_01())? sc_lv<32>(): reg_575.read() >> (unsigned short)tmp_109_cast_fu_855_p1.read().to_uint();
}

void sha256_final::thread_tmp_106_fu_991_p2() {
    tmp_106_fu_991_p2 = (!ap_const_lv5_14.is_01() || !i_3_cast1_reg_1148.read().is_01())? sc_lv<5>(): (sc_bigint<5>(ap_const_lv5_14) + sc_biguint<5>(i_3_cast1_reg_1148.read()));
}

void sha256_final::thread_tmp_107_fu_704_p1() {
    tmp_107_fu_704_p1 = ctx_datalen_read.read().range(21-1, 0);
}

void sha256_final::thread_tmp_108_fu_996_p1() {
    tmp_108_fu_996_p1 = esl_zext<64,5>(tmp_106_fu_991_p2.read());
}

void sha256_final::thread_tmp_109_cast_fu_855_p1() {
    tmp_109_cast_fu_855_p1 = esl_zext<32,5>(tmp_86_fu_849_p2.read());
}

void sha256_final::thread_tmp_109_fu_945_p2() {
    tmp_109_fu_945_p2 = (!tmp_109_cast_fu_855_p1.read().is_01())? sc_lv<32>(): reg_580.read() >> (unsigned short)tmp_109_cast_fu_855_p1.read().to_uint();
}

void sha256_final::thread_tmp_110_fu_1004_p1() {
    tmp_110_fu_1004_p1 = esl_zext<64,5>(tmp_135_cast7_fu_1001_p1.read());
}

void sha256_final::thread_tmp_111_fu_770_p1() {
    tmp_111_fu_770_p1 = tmp_102_read3_fu_666_p3.read().range(8-1, 0);
}

void sha256_final::thread_tmp_112_fu_955_p2() {
    tmp_112_fu_955_p2 = (!tmp_109_cast_fu_855_p1.read().is_01())? sc_lv<32>(): reg_585.read() >> (unsigned short)tmp_109_cast_fu_855_p1.read().to_uint();
}

void sha256_final::thread_tmp_113_fu_1012_p1() {
    tmp_113_fu_1012_p1 = esl_zext<64,5>(tmp_139_cast6_fu_1009_p1.read());
}

void sha256_final::thread_tmp_114_fu_837_p1() {
    tmp_114_fu_837_p1 = i_3_reg_482.read().range(2-1, 0);
}

void sha256_final::thread_tmp_116_fu_865_p1() {
    tmp_116_fu_865_p1 = tmp_87_fu_859_p2.read().range(8-1, 0);
}

void sha256_final::thread_tmp_117_fu_875_p1() {
    tmp_117_fu_875_p1 = tmp_90_fu_869_p2.read().range(8-1, 0);
}

void sha256_final::thread_tmp_118_fu_897_p1() {
    tmp_118_fu_897_p1 = tmp_94_fu_891_p2.read().range(8-1, 0);
}

void sha256_final::thread_tmp_119_fu_921_p1() {
    tmp_119_fu_921_p1 = tmp_98_fu_915_p2.read().range(8-1, 0);
}

void sha256_final::thread_tmp_120_fu_931_p1() {
    tmp_120_fu_931_p1 = tmp_101_fu_925_p2.read().range(8-1, 0);
}

void sha256_final::thread_tmp_121_fu_941_p1() {
    tmp_121_fu_941_p1 = tmp_105_fu_935_p2.read().range(8-1, 0);
}

void sha256_final::thread_tmp_122_fu_951_p1() {
    tmp_122_fu_951_p1 = tmp_109_fu_945_p2.read().range(8-1, 0);
}

void sha256_final::thread_tmp_123_cast8_fu_970_p1() {
    tmp_123_cast8_fu_970_p1 = esl_sext<4,3>(tmp_91_reg_1166.read());
}

void sha256_final::thread_tmp_123_fu_961_p1() {
    tmp_123_fu_961_p1 = tmp_112_fu_955_p2.read().range(8-1, 0);
}

void sha256_final::thread_tmp_135_cast7_fu_1001_p1() {
    tmp_135_cast7_fu_1001_p1 = esl_sext<5,4>(tmp_95_reg_1172.read());
}

void sha256_final::thread_tmp_139_cast6_fu_1009_p1() {
    tmp_139_cast6_fu_1009_p1 = esl_sext<5,3>(tmp_91_reg_1166.read());
}

void sha256_final::thread_tmp_15_fu_693_p3() {
    tmp_15_fu_693_p3 = esl_concat<13,3>(tmp_100_fu_690_p1.read(), ap_const_lv3_0);
}

void sha256_final::thread_tmp_17_fu_679_p3() {
    tmp_17_fu_679_p3 = esl_concat<5,3>(tmp_92_fu_676_p1.read(), ap_const_lv3_0);
}

void sha256_final::thread_tmp_19_fu_707_p3() {
    tmp_19_fu_707_p3 = esl_concat<21,3>(tmp_107_fu_704_p1.read(), ap_const_lv3_0);
}

void sha256_final::thread_tmp_68_fu_816_p1() {
    tmp_68_fu_816_p1 = esl_zext<64,32>(i_fu_804_p2.read());
}

void sha256_final::thread_tmp_69_fu_623_p1() {
    tmp_69_fu_623_p1 = esl_zext<64,32>(i_1_fu_601_p2.read());
}

void sha256_final::thread_tmp_70_fu_628_p2() {
    tmp_70_fu_628_p2 = (!i_2_reg_382.read().is_01() || !ap_const_lv6_38.is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_382.read() == ap_const_lv6_38);
}

void sha256_final::thread_tmp_71_fu_640_p1() {
    tmp_71_fu_640_p1 = esl_zext<64,6>(i_2_reg_382.read());
}

void sha256_final::thread_tmp_72_fu_650_p2() {
    tmp_72_fu_650_p2 = (tmp_81_fu_645_p2.read() ^ ap_const_lv32_FFFFFFFF);
}

void sha256_final::thread_tmp_73_fu_607_p4() {
    tmp_73_fu_607_p4 = i_1_fu_601_p2.read().range(31, 6);
}

void sha256_final::thread_tmp_74_fu_656_p2() {
    tmp_74_fu_656_p2 = (!ctx_bitlen_0_read.read().is_01() || !tmp_72_fu_650_p2.read().is_01())? sc_lv<1>(): (sc_biguint<32>(ctx_bitlen_0_read.read()) > sc_biguint<32>(tmp_72_fu_650_p2.read()));
}

void sha256_final::thread_tmp_75_fu_661_p2() {
    tmp_75_fu_661_p2 = (!ap_const_lv32_1.is_01() || !p_read3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(p_read3.read()));
}

void sha256_final::thread_tmp_76_fu_732_p2() {
    tmp_76_fu_732_p2 = (!tmp_89_fu_673_p1.read().is_01() || !tmp_17_fu_679_p3.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_89_fu_673_p1.read()) + sc_biguint<8>(tmp_17_fu_679_p3.read()));
}

void sha256_final::thread_tmp_81_fu_645_p2() {
    tmp_81_fu_645_p2 = (!ap_const_lv32_3.is_01())? sc_lv<32>(): ctx_datalen_read.read() << (unsigned short)ap_const_lv32_3.to_uint();
}

void sha256_final::thread_tmp_84_fu_825_p2() {
    tmp_84_fu_825_p2 = (!i_3_reg_482.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_3_reg_482.read() == ap_const_lv3_4);
}

void sha256_final::thread_tmp_85_fu_841_p3() {
    tmp_85_fu_841_p3 = esl_concat<2,3>(tmp_114_fu_837_p1.read(), ap_const_lv3_0);
}

void sha256_final::thread_tmp_86_fu_849_p2() {
    tmp_86_fu_849_p2 = (!ap_const_lv5_18.is_01() || !tmp_85_fu_841_p3.read().is_01())? sc_lv<5>(): (sc_bigint<5>(ap_const_lv5_18) - sc_biguint<5>(tmp_85_fu_841_p3.read()));
}

void sha256_final::thread_tmp_87_fu_859_p2() {
    tmp_87_fu_859_p2 = (!tmp_109_cast_fu_855_p1.read().is_01())? sc_lv<32>(): reg_550.read() >> (unsigned short)tmp_109_cast_fu_855_p1.read().to_uint();
}

void sha256_final::thread_tmp_88_fu_965_p1() {
    tmp_88_fu_965_p1 = esl_zext<64,3>(i_3_reg_482.read());
}

void sha256_final::thread_tmp_89_fu_673_p1() {
    tmp_89_fu_673_p1 = ctx_bitlen_0_read.read().range(8-1, 0);
}

void sha256_final::thread_tmp_90_fu_869_p2() {
    tmp_90_fu_869_p2 = (!tmp_109_cast_fu_855_p1.read().is_01())? sc_lv<32>(): reg_555.read() >> (unsigned short)tmp_109_cast_fu_855_p1.read().to_uint();
}

void sha256_final::thread_tmp_91_fu_880_p2() {
    tmp_91_fu_880_p2 = (i_3_reg_482.read() ^ ap_const_lv3_4);
}

void sha256_final::thread_tmp_92_fu_676_p1() {
    tmp_92_fu_676_p1 = ctx_datalen_read.read().range(5-1, 0);
}

void sha256_final::thread_tmp_93_fu_886_p1() {
    tmp_93_fu_886_p1 = esl_zext<64,3>(tmp_91_fu_880_p2.read());
}

void sha256_final::thread_tmp_94_fu_891_p2() {
    tmp_94_fu_891_p2 = (!tmp_109_cast_fu_855_p1.read().is_01())? sc_lv<32>(): reg_560.read() >> (unsigned short)tmp_109_cast_fu_855_p1.read().to_uint();
}

void sha256_final::thread_tmp_95_fu_902_p3() {
    tmp_95_fu_902_p3 = esl_concat<1,3>(ap_const_lv1_1, i_3_reg_482.read());
}

void sha256_final::thread_tmp_96_fu_687_p1() {
    tmp_96_fu_687_p1 = ctx_bitlen_0_read.read().range(16-1, 0);
}

void sha256_final::thread_tmp_97_fu_910_p1() {
    tmp_97_fu_910_p1 = esl_zext<64,4>(tmp_95_fu_902_p3.read());
}

void sha256_final::thread_tmp_98_fu_915_p2() {
    tmp_98_fu_915_p2 = (!tmp_109_cast_fu_855_p1.read().is_01())? sc_lv<32>(): reg_565.read() >> (unsigned short)tmp_109_cast_fu_855_p1.read().to_uint();
}

void sha256_final::thread_tmp_99_fu_973_p1() {
    tmp_99_fu_973_p1 = esl_zext<64,4>(tmp_123_cast8_fu_970_p1.read());
}

void sha256_final::thread_tmp_fu_590_p2() {
    tmp_fu_590_p2 = (!ctx_datalen_read.read().is_01() || !ap_const_lv32_38.is_01())? sc_lv<1>(): (sc_biguint<32>(ctx_datalen_read.read()) < sc_biguint<32>(ap_const_lv32_38));
}

void sha256_final::thread_tmp_s_fu_596_p1() {
    tmp_s_fu_596_p1 = esl_zext<64,32>(ctx_datalen_read.read());
}

void sha256_final::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(tmp_fu_590_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(tmp_fu_590_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_fu_617_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(grp_sha256_transform_fu_494_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && (esl_seteq<1,1,1>(tmp_reg_1090.read(), ap_const_lv1_1) || 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_70_fu_628_p2.read())))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_810_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(grp_sha256_transform_fu_494_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_84_fu_825_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
            break;
    }
}

}

