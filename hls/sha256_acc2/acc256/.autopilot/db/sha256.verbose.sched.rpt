

================================================================
== Vivado HLS Report for 'sha256'
================================================================
* Date:           Mon Jan 28 14:26:55 2019

* Version:        2017.4 (Build 2086221 on Fri Dec 15 21:13:33 MST 2017)
* Project:        sha256_acc2
* Solution:       acc256
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.52|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-----+-----------+-----------+-----------+--------+----------+
        |             |  Latency  | Iteration |  Initiation Interval  |  Trip  |          |
        |  Loop Name  | min | max |  Latency  |  achieved |   target  |  Count | Pipelined|
        +-------------+-----+-----+-----------+-----------+-----------+--------+----------+
        |- Loop 1     |    ?|    ?| 4 ~ 28228 |          -|          -|       ?|    no    |
        | + Loop 1.1  |  128|  128|          2|          -|          -|      64|    no    |
        | + Loop 1.2  |    0|  126|          2|          -|          -| 0 ~ 63 |    no    |
        |- Loop 2     |   64|   64|          2|          -|          -|      32|    no    |
        +-------------+-----+-----+-----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 10
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	8  / (tmp_s)
	3  / (!tmp_s & !icmp)
	6  / (!tmp_s & icmp)
3 --> 
	4  / (!exitcond5)
	5  / (exitcond5)
4 --> 
	3  / true
5 --> 
	2  / true
6 --> 
	5  / (exitcond4)
	7  / (!exitcond4)
7 --> 
	6  / true
8 --> 
	9  / true
9 --> 
	10  / (!exitcond)
10 --> 
	9  / true

* FSM state operations: 

 <State 1> : 2.81ns
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%n = alloca i32"
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%sha256ctx_datalen = alloca i32"
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%sha256ctx_bitlen_0_2 = alloca i32"
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%sha256ctx_bitlen_1_2 = alloca i32"
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%sha256ctx_state_0_2 = alloca i32"
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%sha256ctx_state_1_2 = alloca i32"
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%sha256ctx_state_2_2 = alloca i32"
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%sha256ctx_state_3_2 = alloca i32"
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%sha256ctx_state_4_2 = alloca i32"
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%sha256ctx_state_5_2 = alloca i32"
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%sha256ctx_state_6_2 = alloca i32"
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%sha256ctx_state_7_2 = alloca i32"
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%seg_offset = alloca i32"
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([256 x i8]* %data) nounwind, !map !27"
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %base_offset) nounwind, !map !33"
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %bytes) nounwind, !map !39"
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([32 x i8]* %digest) nounwind, !map !43"
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([7 x i8]* @sha256_str) nounwind"
ST_1 : Operation 29 [1/1] (1.00ns)   --->   "%bytes_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %bytes) nounwind"   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 30 [1/1] (1.00ns)   --->   "%base_offset_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %base_offset) nounwind"   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%seg_buf = alloca [64 x i8], align 16" [sha256.c:22]   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%sha256ctx_data = alloca [64 x i8], align 1" [sha256.c:28]
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecMemCore([256 x i8]* %data, [1 x i8]* @p_str3, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str3, i32 -1, [1 x i8]* @p_str3, [1 x i8]* @p_str3, [1 x i8]* @p_str3, [1 x i8]* @p_str3, [1 x i8]* @p_str3) nounwind"
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([256 x i8]* %data, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind"
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%empty_12 = call i32 (...)* @_ssdm_op_SpecMemCore([32 x i8]* %digest, [1 x i8]* @p_str4, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str4, i32 -1, [1 x i8]* @p_str4, [1 x i8]* @p_str4, [1 x i8]* @p_str4, [1 x i8]* @p_str4, [1 x i8]* @p_str4) nounwind"
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([32 x i8]* %digest, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind"
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %base_offset, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [sha256.c:17]
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %bytes, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [sha256.c:18]
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [sha256.c:19]
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%tmp = trunc i32 %base_offset_read to i10" [sha256.c:32]
ST_1 : Operation 41 [1/1] (1.76ns)   --->   "store i32 0, i32* %seg_offset"
ST_1 : Operation 42 [1/1] (1.81ns)   --->   "store i32 1541459225, i32* %sha256ctx_state_7_2"
ST_1 : Operation 43 [1/1] (1.81ns)   --->   "store i32 528734635, i32* %sha256ctx_state_6_2"
ST_1 : Operation 44 [1/1] (1.81ns)   --->   "store i32 -1694144372, i32* %sha256ctx_state_5_2"
ST_1 : Operation 45 [1/1] (1.81ns)   --->   "store i32 1359893119, i32* %sha256ctx_state_4_2"
ST_1 : Operation 46 [1/1] (1.81ns)   --->   "store i32 -1521486534, i32* %sha256ctx_state_3_2"
ST_1 : Operation 47 [1/1] (1.81ns)   --->   "store i32 1013904242, i32* %sha256ctx_state_2_2"
ST_1 : Operation 48 [1/1] (1.81ns)   --->   "store i32 -1150833019, i32* %sha256ctx_state_1_2"
ST_1 : Operation 49 [1/1] (1.81ns)   --->   "store i32 1779033703, i32* %sha256ctx_state_0_2"
ST_1 : Operation 50 [1/1] (1.81ns)   --->   "store i32 0, i32* %sha256ctx_bitlen_1_2"
ST_1 : Operation 51 [1/1] (1.81ns)   --->   "store i32 0, i32* %sha256ctx_bitlen_0_2"
ST_1 : Operation 52 [1/1] (1.81ns)   --->   "store i32 0, i32* %sha256ctx_datalen"
ST_1 : Operation 53 [1/1] (1.81ns)   --->   "store i32 %bytes_read, i32* %n" [sha256.c:10]
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "br label %.backedge" [sha256.c:32]

 <State 2> : 2.47ns
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%n_load = load i32* %n" [sha256.c:38]
ST_2 : Operation 56 [1/1] (2.47ns)   --->   "%tmp_s = icmp eq i32 %n_load, 0" [sha256.c:32]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "br i1 %tmp_s, label %6, label %1" [sha256.c:32]
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%seg_offset_load_1 = load i32* %seg_offset" [sha256.c:34]
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%tmp_124 = call i26 @_ssdm_op_PartSelect.i26.i32.i32.i32(i32 %n_load, i32 6, i32 31)" [sha256.c:34]
ST_2 : Operation 60 [1/1] (2.45ns)   --->   "%icmp = icmp eq i26 %tmp_124, 0" [sha256.c:34]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%tmp_125 = trunc i32 %seg_offset_load_1 to i10" [sha256.c:34]
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "br i1 %icmp, label %.preheader.preheader, label %.preheader6.preheader" [sha256.c:34]
ST_2 : Operation 63 [1/1] (1.76ns)   --->   "br label %.preheader6" [sha256.c:36]
ST_2 : Operation 64 [1/1] (1.76ns)   --->   "br label %.preheader" [sha256.c:44]
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%sha256ctx_datalen_lo_2 = load i32* %sha256ctx_datalen" [sha256.c:52]
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%sha256ctx_bitlen_0_2_17 = load i32* %sha256ctx_bitlen_0_2" [sha256.c:52]
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%sha256ctx_bitlen_1_2_18 = load i32* %sha256ctx_bitlen_1_2" [sha256.c:52]
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%sha256ctx_state_0_2_3 = load i32* %sha256ctx_state_0_2" [sha256.c:52]
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%sha256ctx_state_1_2_3 = load i32* %sha256ctx_state_1_2" [sha256.c:52]
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%sha256ctx_state_2_2_3 = load i32* %sha256ctx_state_2_2" [sha256.c:52]
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "%sha256ctx_state_3_2_3 = load i32* %sha256ctx_state_3_2" [sha256.c:52]
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "%sha256ctx_state_4_2_3 = load i32* %sha256ctx_state_4_2" [sha256.c:52]
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "%sha256ctx_state_5_2_3 = load i32* %sha256ctx_state_5_2" [sha256.c:52]
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "%sha256ctx_state_6_2_3 = load i32* %sha256ctx_state_6_2" [sha256.c:52]
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "%sha256ctx_state_7_2_3 = load i32* %sha256ctx_state_7_2" [sha256.c:52]
ST_2 : Operation 76 [2/2] (2.47ns)   --->   "call fastcc void @sha256_final([64 x i8]* %sha256ctx_data, i32 %sha256ctx_datalen_lo_2, i32 %sha256ctx_bitlen_0_2_17, i32 %sha256ctx_bitlen_1_2_18, i32 %sha256ctx_state_0_2_3, i32 %sha256ctx_state_1_2_3, i32 %sha256ctx_state_2_2_3, i32 %sha256ctx_state_3_2_3, i32 %sha256ctx_state_4_2_3, i32 %sha256ctx_state_5_2_3, i32 %sha256ctx_state_6_2_3, i32 %sha256ctx_state_7_2_3, [64 x i8]* %seg_buf) nounwind" [sha256.c:52]   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

 <State 3> : 5.99ns
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "%i9 = phi i7 [ %i_7, %2 ], [ 0, %.preheader6.preheader ]"
ST_3 : Operation 78 [1/1] (1.48ns)   --->   "%exitcond5 = icmp eq i7 %i9, -64" [sha256.c:36]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 79 [1/1] (0.00ns)   --->   "%empty_13 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64) nounwind"
ST_3 : Operation 80 [1/1] (1.87ns)   --->   "%i_7 = add i7 %i9, 1" [sha256.c:36]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "br i1 %exitcond5, label %3, label %2" [sha256.c:36]
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "%tmp_144_cast = zext i7 %i9 to i10" [sha256.c:36]
ST_3 : Operation 83 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp1 = add i10 %tmp_125, %tmp_144_cast" [sha256.c:34]   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.86> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 84 [1/1] (3.72ns) (root node of TernaryAdder)   --->   "%sum = add i10 %tmp1, %tmp" [sha256.c:34]   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.86> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 85 [1/1] (0.00ns)   --->   "%sum_cast = zext i10 %sum to i64" [sha256.c:34]
ST_3 : Operation 86 [1/1] (0.00ns)   --->   "%data_addr = getelementptr [256 x i8]* %data, i64 0, i64 %sum_cast" [sha256.c:37]
ST_3 : Operation 87 [2/2] (2.26ns)   --->   "%data_load = load i8* %data_addr, align 1" [sha256.c:37]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 8> <Depth = 32> <RAM>
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "%sha256ctx_datalen_lo = load i32* %sha256ctx_datalen" [sha256.c:40]
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "%sha256ctx_bitlen_0_s = load i32* %sha256ctx_bitlen_0_2" [sha256.c:40]
ST_3 : Operation 90 [1/1] (0.00ns)   --->   "%sha256ctx_bitlen_1_s = load i32* %sha256ctx_bitlen_1_2" [sha256.c:40]
ST_3 : Operation 91 [1/1] (0.00ns)   --->   "%sha256ctx_state_0_2_1 = load i32* %sha256ctx_state_0_2" [sha256.c:40]
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "%sha256ctx_state_1_2_1 = load i32* %sha256ctx_state_1_2" [sha256.c:40]
ST_3 : Operation 93 [1/1] (0.00ns)   --->   "%sha256ctx_state_2_2_1 = load i32* %sha256ctx_state_2_2" [sha256.c:40]
ST_3 : Operation 94 [1/1] (0.00ns)   --->   "%sha256ctx_state_3_2_1 = load i32* %sha256ctx_state_3_2" [sha256.c:40]
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "%sha256ctx_state_4_2_1 = load i32* %sha256ctx_state_4_2" [sha256.c:40]
ST_3 : Operation 96 [1/1] (0.00ns)   --->   "%sha256ctx_state_5_2_1 = load i32* %sha256ctx_state_5_2" [sha256.c:40]
ST_3 : Operation 97 [1/1] (0.00ns)   --->   "%sha256ctx_state_6_2_1 = load i32* %sha256ctx_state_6_2" [sha256.c:40]
ST_3 : Operation 98 [1/1] (0.00ns)   --->   "%sha256ctx_state_7_2_1 = load i32* %sha256ctx_state_7_2" [sha256.c:40]
ST_3 : Operation 99 [1/1] (2.55ns)   --->   "%n_1 = add i32 %n_load, -64" [sha256.c:38]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 100 [2/2] (3.58ns)   --->   "%call_ret = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @sha256_update([64 x i8]* %sha256ctx_data, i32 %sha256ctx_datalen_lo, i32 %sha256ctx_bitlen_0_s, i32 %sha256ctx_bitlen_1_s, i32 %sha256ctx_state_0_2_1, i32 %sha256ctx_state_1_2_1, i32 %sha256ctx_state_2_2_1, i32 %sha256ctx_state_3_2_1, i32 %sha256ctx_state_4_2_1, i32 %sha256ctx_state_5_2_1, i32 %sha256ctx_state_6_2_1, i32 %sha256ctx_state_7_2_1, [64 x i8]* %seg_buf, i32 64) nounwind" [sha256.c:40]   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 101 [1/1] (1.81ns)   --->   "store i32 %n_1, i32* %n" [sha256.c:38]

 <State 4> : 4.59ns
ST_4 : Operation 102 [1/1] (0.00ns)   --->   "%tmp_116 = zext i7 %i9 to i64" [sha256.c:37]
ST_4 : Operation 103 [1/2] (2.26ns)   --->   "%data_load = load i8* %data_addr, align 1" [sha256.c:37]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 8> <Depth = 32> <RAM>
ST_4 : Operation 104 [1/1] (0.00ns)   --->   "%seg_buf_addr_1 = getelementptr inbounds [64 x i8]* %seg_buf, i64 0, i64 %tmp_116" [sha256.c:37]
ST_4 : Operation 105 [1/1] (2.32ns)   --->   "store i8 %data_load, i8* %seg_buf_addr_1, align 1" [sha256.c:37]   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_4 : Operation 106 [1/1] (0.00ns)   --->   "br label %.preheader6" [sha256.c:36]

 <State 5> : 4.32ns
ST_5 : Operation 107 [1/1] (0.00ns)   --->   "%seg_offset_load = load i32* %seg_offset" [sha256.c:39]
ST_5 : Operation 108 [1/1] (2.55ns)   --->   "%seg_offset_1 = add i32 %seg_offset_load, 64" [sha256.c:39]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 109 [1/2] (0.00ns)   --->   "%call_ret = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @sha256_update([64 x i8]* %sha256ctx_data, i32 %sha256ctx_datalen_lo, i32 %sha256ctx_bitlen_0_s, i32 %sha256ctx_bitlen_1_s, i32 %sha256ctx_state_0_2_1, i32 %sha256ctx_state_1_2_1, i32 %sha256ctx_state_2_2_1, i32 %sha256ctx_state_3_2_1, i32 %sha256ctx_state_4_2_1, i32 %sha256ctx_state_5_2_1, i32 %sha256ctx_state_6_2_1, i32 %sha256ctx_state_7_2_1, [64 x i8]* %seg_buf, i32 64) nounwind" [sha256.c:40]   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 110 [1/1] (0.00ns)   --->   "%sha256ctx_datalen_1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 0" [sha256.c:40]
ST_5 : Operation 111 [1/1] (0.00ns)   --->   "%sha256ctx_bitlen_0 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 1" [sha256.c:40]
ST_5 : Operation 112 [1/1] (0.00ns)   --->   "%sha256ctx_bitlen_1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 2" [sha256.c:40]
ST_5 : Operation 113 [1/1] (0.00ns)   --->   "%sha256ctx_state_0 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 3" [sha256.c:40]
ST_5 : Operation 114 [1/1] (0.00ns)   --->   "%sha256ctx_state_1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 4" [sha256.c:40]
ST_5 : Operation 115 [1/1] (0.00ns)   --->   "%sha256ctx_state_2 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 5" [sha256.c:40]
ST_5 : Operation 116 [1/1] (0.00ns)   --->   "%sha256ctx_state_3 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 6" [sha256.c:40]
ST_5 : Operation 117 [1/1] (0.00ns)   --->   "%sha256ctx_state_4 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 7" [sha256.c:40]
ST_5 : Operation 118 [1/1] (0.00ns)   --->   "%sha256ctx_state_5 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 8" [sha256.c:40]
ST_5 : Operation 119 [1/1] (0.00ns)   --->   "%sha256ctx_state_6 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 9" [sha256.c:40]
ST_5 : Operation 120 [1/1] (0.00ns)   --->   "%sha256ctx_state_7 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 10" [sha256.c:40]
ST_5 : Operation 121 [1/1] (1.76ns)   --->   "store i32 %seg_offset_1, i32* %seg_offset" [sha256.c:39]
ST_5 : Operation 122 [1/1] (1.81ns)   --->   "store i32 %sha256ctx_state_7, i32* %sha256ctx_state_7_2" [sha256.c:40]
ST_5 : Operation 123 [1/1] (1.81ns)   --->   "store i32 %sha256ctx_state_6, i32* %sha256ctx_state_6_2" [sha256.c:40]
ST_5 : Operation 124 [1/1] (1.81ns)   --->   "store i32 %sha256ctx_state_5, i32* %sha256ctx_state_5_2" [sha256.c:40]
ST_5 : Operation 125 [1/1] (1.81ns)   --->   "store i32 %sha256ctx_state_4, i32* %sha256ctx_state_4_2" [sha256.c:40]
ST_5 : Operation 126 [1/1] (1.81ns)   --->   "store i32 %sha256ctx_state_3, i32* %sha256ctx_state_3_2" [sha256.c:40]
ST_5 : Operation 127 [1/1] (1.81ns)   --->   "store i32 %sha256ctx_state_2, i32* %sha256ctx_state_2_2" [sha256.c:40]
ST_5 : Operation 128 [1/1] (1.81ns)   --->   "store i32 %sha256ctx_state_1, i32* %sha256ctx_state_1_2" [sha256.c:40]
ST_5 : Operation 129 [1/1] (1.81ns)   --->   "store i32 %sha256ctx_state_0, i32* %sha256ctx_state_0_2" [sha256.c:40]
ST_5 : Operation 130 [1/1] (1.81ns)   --->   "store i32 %sha256ctx_bitlen_1, i32* %sha256ctx_bitlen_1_2" [sha256.c:40]
ST_5 : Operation 131 [1/1] (1.81ns)   --->   "store i32 %sha256ctx_bitlen_0, i32* %sha256ctx_bitlen_0_2" [sha256.c:40]
ST_5 : Operation 132 [1/1] (1.81ns)   --->   "store i32 %sha256ctx_datalen_1, i32* %sha256ctx_datalen" [sha256.c:40]
ST_5 : Operation 133 [1/1] (0.00ns)   --->   "br label %.backedge.backedge" [sha256.c:41]
ST_5 : Operation 134 [1/2] (0.00ns)   --->   "%call_ret1 = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @sha256_update([64 x i8]* %sha256ctx_data, i32 %sha256ctx_datalen_lo_1, i32 %sha256ctx_bitlen_0_1, i32 %sha256ctx_bitlen_1_1, i32 %sha256ctx_state_0_2_2, i32 %sha256ctx_state_1_2_2, i32 %sha256ctx_state_2_2_2, i32 %sha256ctx_state_3_2_2, i32 %sha256ctx_state_4_2_2, i32 %sha256ctx_state_5_2_2, i32 %sha256ctx_state_6_2_2, i32 %sha256ctx_state_7_2_2, [64 x i8]* %seg_buf, i32 %n_load) nounwind" [sha256.c:46]   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 135 [1/1] (0.00ns)   --->   "%sha256ctx_datalen_2 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 0" [sha256.c:46]
ST_5 : Operation 136 [1/1] (0.00ns)   --->   "%sha256ctx_bitlen_0_1_15 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 1" [sha256.c:46]
ST_5 : Operation 137 [1/1] (0.00ns)   --->   "%sha256ctx_bitlen_1_1_16 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 2" [sha256.c:46]
ST_5 : Operation 138 [1/1] (0.00ns)   --->   "%sha256ctx_state_0_1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 3" [sha256.c:46]
ST_5 : Operation 139 [1/1] (0.00ns)   --->   "%sha256ctx_state_1_1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 4" [sha256.c:46]
ST_5 : Operation 140 [1/1] (0.00ns)   --->   "%sha256ctx_state_2_1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 5" [sha256.c:46]
ST_5 : Operation 141 [1/1] (0.00ns)   --->   "%sha256ctx_state_3_1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 6" [sha256.c:46]
ST_5 : Operation 142 [1/1] (0.00ns)   --->   "%sha256ctx_state_4_1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 7" [sha256.c:46]
ST_5 : Operation 143 [1/1] (0.00ns)   --->   "%sha256ctx_state_5_1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 8" [sha256.c:46]
ST_5 : Operation 144 [1/1] (0.00ns)   --->   "%sha256ctx_state_6_1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 9" [sha256.c:46]
ST_5 : Operation 145 [1/1] (0.00ns)   --->   "%sha256ctx_state_7_1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 10" [sha256.c:46]
ST_5 : Operation 146 [1/1] (1.81ns)   --->   "store i32 %sha256ctx_state_7_1, i32* %sha256ctx_state_7_2" [sha256.c:46]
ST_5 : Operation 147 [1/1] (1.81ns)   --->   "store i32 %sha256ctx_state_6_1, i32* %sha256ctx_state_6_2" [sha256.c:46]
ST_5 : Operation 148 [1/1] (1.81ns)   --->   "store i32 %sha256ctx_state_5_1, i32* %sha256ctx_state_5_2" [sha256.c:46]
ST_5 : Operation 149 [1/1] (1.81ns)   --->   "store i32 %sha256ctx_state_4_1, i32* %sha256ctx_state_4_2" [sha256.c:46]
ST_5 : Operation 150 [1/1] (1.81ns)   --->   "store i32 %sha256ctx_state_3_1, i32* %sha256ctx_state_3_2" [sha256.c:46]
ST_5 : Operation 151 [1/1] (1.81ns)   --->   "store i32 %sha256ctx_state_2_1, i32* %sha256ctx_state_2_2" [sha256.c:46]
ST_5 : Operation 152 [1/1] (1.81ns)   --->   "store i32 %sha256ctx_state_1_1, i32* %sha256ctx_state_1_2" [sha256.c:46]
ST_5 : Operation 153 [1/1] (1.81ns)   --->   "store i32 %sha256ctx_state_0_1, i32* %sha256ctx_state_0_2" [sha256.c:46]
ST_5 : Operation 154 [1/1] (1.81ns)   --->   "store i32 %sha256ctx_bitlen_1_1_16, i32* %sha256ctx_bitlen_1_2" [sha256.c:46]
ST_5 : Operation 155 [1/1] (1.81ns)   --->   "store i32 %sha256ctx_bitlen_0_1_15, i32* %sha256ctx_bitlen_0_2" [sha256.c:46]
ST_5 : Operation 156 [1/1] (1.81ns)   --->   "store i32 %sha256ctx_datalen_2, i32* %sha256ctx_datalen" [sha256.c:46]
ST_5 : Operation 157 [1/1] (0.00ns)   --->   "br label %.backedge.backedge"
ST_5 : Operation 158 [1/1] (0.00ns)   --->   "br label %.backedge"

 <State 6> : 5.99ns
ST_6 : Operation 159 [1/1] (0.00ns)   --->   "%i_1 = phi i6 [ %i_8, %4 ], [ 0, %.preheader.preheader ]"
ST_6 : Operation 160 [1/1] (0.00ns)   --->   "%i_1_cast = zext i6 %i_1 to i32" [sha256.c:44]
ST_6 : Operation 161 [1/1] (2.47ns)   --->   "%exitcond4 = icmp eq i32 %i_1_cast, %n_load" [sha256.c:44]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 162 [1/1] (0.00ns)   --->   "%empty_14 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 0, i64 63, i64 0) nounwind"
ST_6 : Operation 163 [1/1] (1.82ns)   --->   "%i_8 = add i6 %i_1, 1" [sha256.c:44]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 164 [1/1] (0.00ns)   --->   "br i1 %exitcond4, label %5, label %4" [sha256.c:44]
ST_6 : Operation 165 [1/1] (0.00ns)   --->   "%tmp_145_cast = zext i6 %i_1 to i10" [sha256.c:44]
ST_6 : Operation 166 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp2 = add i10 %tmp_125, %tmp_145_cast" [sha256.c:34]   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.86> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 167 [1/1] (3.72ns) (root node of TernaryAdder)   --->   "%sum2 = add i10 %tmp2, %tmp" [sha256.c:34]   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.86> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 168 [1/1] (0.00ns)   --->   "%sum2_cast = zext i10 %sum2 to i64" [sha256.c:34]
ST_6 : Operation 169 [1/1] (0.00ns)   --->   "%data_addr_4 = getelementptr [256 x i8]* %data, i64 0, i64 %sum2_cast" [sha256.c:45]
ST_6 : Operation 170 [2/2] (2.26ns)   --->   "%data_load_4 = load i8* %data_addr_4, align 1" [sha256.c:45]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 8> <Depth = 32> <RAM>
ST_6 : Operation 171 [1/1] (0.00ns)   --->   "%sha256ctx_datalen_lo_1 = load i32* %sha256ctx_datalen" [sha256.c:46]
ST_6 : Operation 172 [1/1] (0.00ns)   --->   "%sha256ctx_bitlen_0_1 = load i32* %sha256ctx_bitlen_0_2" [sha256.c:46]
ST_6 : Operation 173 [1/1] (0.00ns)   --->   "%sha256ctx_bitlen_1_1 = load i32* %sha256ctx_bitlen_1_2" [sha256.c:46]
ST_6 : Operation 174 [1/1] (0.00ns)   --->   "%sha256ctx_state_0_2_2 = load i32* %sha256ctx_state_0_2" [sha256.c:46]
ST_6 : Operation 175 [1/1] (0.00ns)   --->   "%sha256ctx_state_1_2_2 = load i32* %sha256ctx_state_1_2" [sha256.c:46]
ST_6 : Operation 176 [1/1] (0.00ns)   --->   "%sha256ctx_state_2_2_2 = load i32* %sha256ctx_state_2_2" [sha256.c:46]
ST_6 : Operation 177 [1/1] (0.00ns)   --->   "%sha256ctx_state_3_2_2 = load i32* %sha256ctx_state_3_2" [sha256.c:46]
ST_6 : Operation 178 [1/1] (0.00ns)   --->   "%sha256ctx_state_4_2_2 = load i32* %sha256ctx_state_4_2" [sha256.c:46]
ST_6 : Operation 179 [1/1] (0.00ns)   --->   "%sha256ctx_state_5_2_2 = load i32* %sha256ctx_state_5_2" [sha256.c:46]
ST_6 : Operation 180 [1/1] (0.00ns)   --->   "%sha256ctx_state_6_2_2 = load i32* %sha256ctx_state_6_2" [sha256.c:46]
ST_6 : Operation 181 [1/1] (0.00ns)   --->   "%sha256ctx_state_7_2_2 = load i32* %sha256ctx_state_7_2" [sha256.c:46]
ST_6 : Operation 182 [2/2] (3.58ns)   --->   "%call_ret1 = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @sha256_update([64 x i8]* %sha256ctx_data, i32 %sha256ctx_datalen_lo_1, i32 %sha256ctx_bitlen_0_1, i32 %sha256ctx_bitlen_1_1, i32 %sha256ctx_state_0_2_2, i32 %sha256ctx_state_1_2_2, i32 %sha256ctx_state_2_2_2, i32 %sha256ctx_state_3_2_2, i32 %sha256ctx_state_4_2_2, i32 %sha256ctx_state_5_2_2, i32 %sha256ctx_state_6_2_2, i32 %sha256ctx_state_7_2_2, [64 x i8]* %seg_buf, i32 %n_load) nounwind" [sha256.c:46]   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 183 [1/1] (1.81ns)   --->   "store i32 0, i32* %n"

 <State 7> : 4.59ns
ST_7 : Operation 184 [1/1] (0.00ns)   --->   "%tmp_115 = zext i6 %i_1 to i64" [sha256.c:45]
ST_7 : Operation 185 [1/2] (2.26ns)   --->   "%data_load_4 = load i8* %data_addr_4, align 1" [sha256.c:45]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 8> <Depth = 32> <RAM>
ST_7 : Operation 186 [1/1] (0.00ns)   --->   "%seg_buf_addr_2 = getelementptr inbounds [64 x i8]* %seg_buf, i64 0, i64 %tmp_115" [sha256.c:45]
ST_7 : Operation 187 [1/1] (2.32ns)   --->   "store i8 %data_load_4, i8* %seg_buf_addr_2, align 1" [sha256.c:45]   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_7 : Operation 188 [1/1] (0.00ns)   --->   "br label %.preheader" [sha256.c:44]

 <State 8> : 1.77ns
ST_8 : Operation 189 [1/2] (0.00ns)   --->   "call fastcc void @sha256_final([64 x i8]* %sha256ctx_data, i32 %sha256ctx_datalen_lo_2, i32 %sha256ctx_bitlen_0_2_17, i32 %sha256ctx_bitlen_1_2_18, i32 %sha256ctx_state_0_2_3, i32 %sha256ctx_state_1_2_3, i32 %sha256ctx_state_2_2_3, i32 %sha256ctx_state_3_2_3, i32 %sha256ctx_state_4_2_3, i32 %sha256ctx_state_5_2_3, i32 %sha256ctx_state_6_2_3, i32 %sha256ctx_state_7_2_3, [64 x i8]* %seg_buf) nounwind" [sha256.c:52]   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 190 [1/1] (1.76ns)   --->   "br label %7" [sha256.c:54]

 <State 9> : 2.32ns
ST_9 : Operation 191 [1/1] (0.00ns)   --->   "%i_2 = phi i6 [ 0, %6 ], [ %i, %8 ]"
ST_9 : Operation 192 [1/1] (1.42ns)   --->   "%exitcond = icmp eq i6 %i_2, -32" [sha256.c:54]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 193 [1/1] (0.00ns)   --->   "%empty_19 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind"
ST_9 : Operation 194 [1/1] (1.82ns)   --->   "%i = add i6 %i_2, 1" [sha256.c:54]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 195 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %9, label %8" [sha256.c:54]
ST_9 : Operation 196 [1/1] (0.00ns)   --->   "%tmp_114 = zext i6 %i_2 to i64" [sha256.c:56]
ST_9 : Operation 197 [1/1] (0.00ns)   --->   "%seg_buf_addr = getelementptr inbounds [64 x i8]* %seg_buf, i64 0, i64 %tmp_114" [sha256.c:56]
ST_9 : Operation 198 [2/2] (2.32ns)   --->   "%seg_buf_load = load i8* %seg_buf_addr, align 1" [sha256.c:56]   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_9 : Operation 199 [1/1] (0.00ns)   --->   "ret void" [sha256.c:58]

 <State 10> : 4.64ns
ST_10 : Operation 200 [1/2] (2.32ns)   --->   "%seg_buf_load = load i8* %seg_buf_addr, align 1" [sha256.c:56]   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_10 : Operation 201 [1/1] (0.00ns)   --->   "%digest_addr = getelementptr [32 x i8]* %digest, i64 0, i64 %tmp_114" [sha256.c:56]
ST_10 : Operation 202 [1/1] (2.32ns)   --->   "store i8 %seg_buf_load, i8* %digest_addr, align 1" [sha256.c:56]   --->   Core 42 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 8> <Depth = 32> <RAM>
ST_10 : Operation 203 [1/1] (0.00ns)   --->   "br label %7" [sha256.c:54]


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 2.81ns
The critical path consists of the following:
	s_axi read on port 'bytes' [24]  (1 ns)
	'store' operation (sha256.c:10) of variable 'bytes' on local variable 'bytes' [48]  (1.81 ns)

 <State 2>: 2.47ns
The critical path consists of the following:
	'load' operation ('n_load', sha256.c:38) on local variable 'bytes' [51]  (0 ns)
	'icmp' operation ('tmp_s', sha256.c:32) [52]  (2.47 ns)

 <State 3>: 5.99ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', sha256.c:36) [63]  (0 ns)
	'add' operation ('tmp1', sha256.c:34) [71]  (0 ns)
	'add' operation ('sum', sha256.c:34) [72]  (3.73 ns)
	'getelementptr' operation ('data_addr', sha256.c:37) [74]  (0 ns)
	'load' operation ('data_load', sha256.c:37) on array 'data' [75]  (2.27 ns)

 <State 4>: 4.59ns
The critical path consists of the following:
	'load' operation ('data_load', sha256.c:37) on array 'data' [75]  (2.27 ns)
	'store' operation (sha256.c:37) of variable 'data_load', sha256.c:37 on array 'seg_buf', sha256.c:22 [77]  (2.32 ns)

 <State 5>: 4.32ns
The critical path consists of the following:
	'load' operation ('seg_offset_load', sha256.c:39) on local variable 'seg_offset' [91]  (0 ns)
	'add' operation ('seg_offset', sha256.c:39) [93]  (2.55 ns)
	'store' operation (sha256.c:39) of variable 'seg_offset', sha256.c:39 on local variable 'seg_offset' [106]  (1.77 ns)

 <State 6>: 5.99ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', sha256.c:44) [123]  (0 ns)
	'add' operation ('tmp2', sha256.c:34) [132]  (0 ns)
	'add' operation ('sum2', sha256.c:34) [133]  (3.73 ns)
	'getelementptr' operation ('data_addr_4', sha256.c:45) [135]  (0 ns)
	'load' operation ('data_load_4', sha256.c:45) on array 'data' [136]  (2.27 ns)

 <State 7>: 4.59ns
The critical path consists of the following:
	'load' operation ('data_load_4', sha256.c:45) on array 'data' [136]  (2.27 ns)
	'store' operation (sha256.c:45) of variable 'data_load_4', sha256.c:45 on array 'seg_buf', sha256.c:22 [138]  (2.32 ns)

 <State 8>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', sha256.c:54) [194]  (1.77 ns)

 <State 9>: 2.32ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', sha256.c:54) [194]  (0 ns)
	'getelementptr' operation ('seg_buf_addr', sha256.c:56) [201]  (0 ns)
	'load' operation ('seg_buf_load', sha256.c:56) on array 'seg_buf', sha256.c:22 [202]  (2.32 ns)

 <State 10>: 4.64ns
The critical path consists of the following:
	'load' operation ('seg_buf_load', sha256.c:56) on array 'seg_buf', sha256.c:22 [202]  (2.32 ns)
	'store' operation (sha256.c:56) of variable 'seg_buf_load', sha256.c:56 on array 'digest' [204]  (2.32 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
